scale_y_continuous(labels = scales::comma) +
labs(x = "",
y = "",
title = "Types of plastic",
subtitle = "Most plastic type manufactured") +
theme(axis.text.x = element_text(angle = 15),
plot.title = element_text(family = "Helvetica", size = 20, face = "bold", color = "#222222"),
plot.subtitle = element_text(family = "Helvetica", size = 18,
margin = margin(9, 0, 9, 0)),
axis.text = element_text(family = "Helvetica", size = 10,
color = "#222222"))
plastics %>%
pivot_longer(hdpe:pvc, names_to = "plastic_type", values_to = "count") %>%
mutate(country = fct_reorder(country, grand_total)) %>%
filter(!is.na(count), count != 0) %>%
ggplot(aes(plastic_type, count)) +
geom_col(fill = "#990000") +
geom_hline(yintercept = 0, size = 1, colour = "#333333") +
scale_y_continuous(labels = scales::comma) +
labs(x = "",
y = "",
title = "Types of plastic",
subtitle = "Most plastic type manufactured") +
theme(axis.text.x = element_text(angle = 15),
plot.title = element_text(family = "Helvetica", size = 20, face = "bold", color = "#222222"),
plot.subtitle = element_text(family = "Helvetica", size = 18,
margin = margin(9, 0, 9, 0)),
axis.text = element_text(family = "Helvetica", size = 10,
color = "#222222"))
plastics %>%
pivot_longer(hdpe:pvc, names_to = "plastic_type", values_to = "count") %>%
mutate(country = fct_reorder(country, grand_total)) %>%
filter(!is.na(count), count != 0) %>%
ggplot(aes(plastic_type, count)) +
geom_col(fill = "#990000") +
geom_hline(yintercept = 0, size = 0.5, colour = "#333333") +
scale_y_continuous(labels = scales::comma) +
labs(x = "",
y = "",
title = "Types of plastic",
subtitle = "Most plastic type manufactured") +
theme(axis.text.x = element_text(angle = 15),
plot.title = element_text(family = "Helvetica", size = 20, face = "bold", color = "#222222"),
plot.subtitle = element_text(family = "Helvetica", size = 18,
margin = margin(9, 0, 9, 0)),
axis.text = element_text(family = "Helvetica", size = 10,
color = "#222222"))
plastics %>%
pivot_longer(hdpe:pvc, names_to = "plastic_type", values_to = "count") %>%
mutate(country = fct_reorder(country, grand_total)) %>%
filter(!is.na(count), count != 0) %>%
ggplot(aes(plastic_type, count)) +
geom_col(fill = "#990000") +
geom_hline(yintercept = 0, size = 1, colour = "#333333") +
scale_y_continuous(labels = scales::comma) +
labs(x = "",
y = "",
title = "Types of plastic",
subtitle = "Most plastic type manufactured") +
theme(axis.text.x = element_text(angle = 15),
plot.title = element_text(family = "Helvetica", size = 20, face = "bold", color = "#222222"),
plot.subtitle = element_text(family = "Helvetica", size = 18,
margin = margin(9, 0, 9, 0)),
axis.text = element_text(family = "Helvetica", size = 10,
color = "#222222"))
plastics %>%
pivot_longer(hdpe:pvc, names_to = "plastic_type", values_to = "count") %>%
mutate(country = fct_reorder(country, grand_total)) %>%
filter(!is.na(count), count != 0) %>%
ggplot(aes(plastic_type, count)) +
geom_col(fill = "#990000") +
geom_hline(yintercept = 0, size = 1, colour = "#333333") +
scale_y_continuous(labels = scales::comma) +
labs(x = "",
y = "",
title = "Types of plastic",
subtitle = "Most plastic type manufactured") +
theme(axis.text.x = element_text(angle = 15),
plot.title = element_text(family = "Helvetica", size = 20, face = "bold", color = "#222222"),
plot.subtitle = element_text(family = "Helvetica", size = 16,
margin = margin(9, 0, 9, 0)),
axis.text = element_text(family = "Helvetica", size = 10,
color = "#222222"))
plastics %>%
pivot_longer(hdpe:pvc, names_to = "plastic_type", values_to = "count") %>%
mutate(country = fct_reorder(country, grand_total)) %>%
filter(!is.na(count), count != 0) %>%
ggplot(aes(plastic_type, count)) +
geom_col(fill = "#990000") +
geom_hline(yintercept = 0, size = 1, colour = "#333333") +
scale_y_continuous(labels = scales::comma) +
labs(x = "",
y = "",
title = "Types of plastic",
subtitle = "Most Plastic Type Manufactured") +
theme(axis.text.x = element_text(angle = 15),
plot.title = element_text(family = "Helvetica", size = 20, face = "bold", color = "#222222"),
plot.subtitle = element_text(family = "Helvetica", size = 16,
margin = margin(9, 0, 9, 0)),
axis.text = element_text(family = "Helvetica", size = 10,
color = "#222222"))
#Prepare data
plastics %>%
filter(country != "EMPTY") %>%
filter(parent_company == "Grand Total", year == "2019") %>%
select(country, grand_total) %>%
group_by(country) %>%
summarise(total = sum(grand_total)) %>%
mutate(country = fct_reorder(country, total)) %>%
filter(total > 3000) %>%
#Make plot
ggplot(aes(country, total)) +
geom_bar(stat = "identity", fill = "#FAAB18")  +
geom_hline(yintercept = 0, size = 1, colour="#333333") +
labs(x = "",
y = "total") +
coord_flip() +
labs(x = "",
y = "",
title = "Top Plastic Pollutant Countries",
subtitle = "Total of different types of plastics") +
theme( plot.title = element_text(family = "Helvetica", size = 20,
face = "bold", color = "#222222"),
plot.subtitle = element_text(family = "Helvetica", size = 18,
margin = margin(9, 0, 9, 0)),
axis.text = element_text(family = "Helvetica", size = 10,
color = "#222222"))
#Prepare data
plastics %>%
pivot_longer(hdpe:pvc, names_to = "plastic_type", values_to = "count") %>%
mutate(country = fct_reorder(country, grand_total)) %>%
filter(!is.na(count), count != 0) %>%
# Make Plot
ggplot(aes(plastic_type, count)) +
geom_line() +
#geom_col(fill = "#990000") +
geom_hline(yintercept = 0, size = 1, colour = "#333333") +
scale_y_continuous(labels = scales::comma) +
labs(x = "",
y = "",
title = "Types of plastic",
subtitle = "Most Plastic Type Manufactured") +
theme(axis.text.x = element_text(angle = 15),
plot.title = element_text(family = "Helvetica", size = 20, face = "bold", color = "#222222"),
plot.subtitle = element_text(family = "Helvetica", size = 16,
margin = margin(9, 0, 9, 0)),
axis.text = element_text(family = "Helvetica", size = 10,
color = "#222222"))
#Prepare data
plastics %>%
pivot_longer(hdpe:pvc, names_to = "plastic_type", values_to = "count") %>%
mutate(country = fct_reorder(country, grand_total)) %>%
filter(!is.na(count), count != 0) %>%
# Make Plot
ggplot(aes(plastic_type, count)) +
geom_line(stat = "identity") +
#geom_col(fill = "#990000") +
geom_hline(yintercept = 0, size = 1, colour = "#333333") +
scale_y_continuous(labels = scales::comma) +
labs(x = "",
y = "",
title = "Types of plastic",
subtitle = "Most Plastic Type Manufactured") +
theme(axis.text.x = element_text(angle = 15),
plot.title = element_text(family = "Helvetica", size = 20, face = "bold", color = "#222222"),
plot.subtitle = element_text(family = "Helvetica", size = 16,
margin = margin(9, 0, 9, 0)),
axis.text = element_text(family = "Helvetica", size = 10,
color = "#222222"))
#Prepare data
plastics %>%
pivot_longer(hdpe:pvc, names_to = "plastic_type", values_to = "count") %>%
mutate(country = fct_reorder(country, grand_total)) %>%
filter(!is.na(count), count != 0) %>%
# Make Plot
ggplot(aes(plastic_type, count)) +
geom_line(aes(group = 1)) +
#geom_col(fill = "#990000") +
geom_hline(yintercept = 0, size = 1, colour = "#333333") +
scale_y_continuous(labels = scales::comma) +
labs(x = "",
y = "",
title = "Types of plastic",
subtitle = "Most Plastic Type Manufactured") +
theme(axis.text.x = element_text(angle = 15),
plot.title = element_text(family = "Helvetica", size = 20, face = "bold", color = "#222222"),
plot.subtitle = element_text(family = "Helvetica", size = 16,
margin = margin(9, 0, 9, 0)),
axis.text = element_text(family = "Helvetica", size = 10,
color = "#222222"))
#Prepare data
plastics %>%
pivot_longer(hdpe:pvc, names_to = "plastic_type", values_to = "count") %>%
mutate(country = fct_reorder(country, grand_total)) %>%
filter(!is.na(count), count != 0) %>%
# Make Plot
ggplot(aes(plastic_type, count)) +
geom_line(aes(group = 10)) +
#geom_col(fill = "#990000") +
geom_hline(yintercept = 0, size = 1, colour = "#333333") +
scale_y_continuous(labels = scales::comma) +
labs(x = "",
y = "",
title = "Types of plastic",
subtitle = "Most Plastic Type Manufactured") +
theme(axis.text.x = element_text(angle = 15),
plot.title = element_text(family = "Helvetica", size = 20, face = "bold", color = "#222222"),
plot.subtitle = element_text(family = "Helvetica", size = 16,
margin = margin(9, 0, 9, 0)),
axis.text = element_text(family = "Helvetica", size = 10,
color = "#222222"))
#Prepare data
plastics %>%
pivot_longer(hdpe:pvc, names_to = "plastic_type", values_to = "count") %>%
mutate(country = fct_reorder(country, grand_total)) %>%
filter(!is.na(count), count != 0) %>%
# Make Plot
ggplot(aes(plastic_type, count)) +
geom_line(aes(group = 2)) +
#geom_col(fill = "#990000") +
geom_hline(yintercept = 0, size = 1, colour = "#333333") +
scale_y_continuous(labels = scales::comma) +
labs(x = "",
y = "",
title = "Types of plastic",
subtitle = "Most Plastic Type Manufactured") +
theme(axis.text.x = element_text(angle = 15),
plot.title = element_text(family = "Helvetica", size = 20, face = "bold", color = "#222222"),
plot.subtitle = element_text(family = "Helvetica", size = 16,
margin = margin(9, 0, 9, 0)),
axis.text = element_text(family = "Helvetica", size = 10,
color = "#222222"))
#Prepare data
plastics %>%
pivot_longer(hdpe:pvc, names_to = "plastic_type", values_to = "count") %>%
mutate(country = fct_reorder(country, grand_total)) %>%
filter(!is.na(count), count != 0) %>%
# Make Plot
ggplot(aes(plastic_type, count)) +
geom_line(aes(group = 0)) +
#geom_col(fill = "#990000") +
geom_hline(yintercept = 0, size = 1, colour = "#333333") +
scale_y_continuous(labels = scales::comma) +
labs(x = "",
y = "",
title = "Types of plastic",
subtitle = "Most Plastic Type Manufactured") +
theme(axis.text.x = element_text(angle = 15),
plot.title = element_text(family = "Helvetica", size = 20, face = "bold", color = "#222222"),
plot.subtitle = element_text(family = "Helvetica", size = 16,
margin = margin(9, 0, 9, 0)),
axis.text = element_text(family = "Helvetica", size = 10,
color = "#222222"))
#Prepare data
plastics %>%
pivot_longer(hdpe:pvc, names_to = "plastic_type", values_to = "count") %>%
mutate(country = fct_reorder(country, grand_total)) %>%
filter(!is.na(count), count != 0) %>%
# Make Plot
ggplot(aes(plastic_type, count)) +
#geom_col(fill = "#990000") +
geom_hline(yintercept = 0, size = 1, colour = "#333333") +
scale_y_continuous(labels = scales::comma) +
labs(x = "",
y = "",
title = "Types of plastic",
subtitle = "Most Plastic Type Manufactured") +
theme(axis.text.x = element_text(angle = 15),
plot.title = element_text(family = "Helvetica", size = 20, face = "bold", color = "#222222"),
plot.subtitle = element_text(family = "Helvetica", size = 16,
margin = margin(9, 0, 9, 0)),
axis.text = element_text(family = "Helvetica", size = 10,
color = "#222222"))
#Prepare data
plastics %>%
pivot_longer(hdpe:pvc, names_to = "plastic_type", values_to = "count") %>%
mutate(country = fct_reorder(country, grand_total)) %>%
filter(!is.na(count), count != 0) %>%
# Make Plot
ggplot(aes(plastic_type, count)) +
geom_col(fill = "#990000") +
geom_hline(yintercept = 0, size = 1, colour = "#333333") +
scale_y_continuous(labels = scales::comma) +
labs(x = "",
y = "",
title = "Types of plastic",
subtitle = "Most Plastic Type Manufactured") +
theme(axis.text.x = element_text(angle = 15),
plot.title = element_text(family = "Helvetica", size = 20, face = "bold", color = "#222222"),
plot.subtitle = element_text(family = "Helvetica", size = 16,
margin = margin(9, 0, 9, 0)),
axis.text = element_text(family = "Helvetica", size = 10,
color = "#222222"))
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE, cache = TRUE)
# Chunk 2
library(tidyverse) # metadata of packages
theme_set(theme_light())
# Chunk 3
plastics <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-01-26/plastics.csv')
# Chunk 4
skimr::skim(plastics)
# Chunk 5
#Prepare data
plastics %>%
filter(country != "EMPTY") %>%
filter(parent_company == "Grand Total", year == "2019") %>%
select(country, grand_total) %>%
group_by(country) %>%
summarise(total = sum(grand_total)) %>%
mutate(country = fct_reorder(country, total)) %>%
filter(total > 3000) %>%
#Make plot
ggplot(aes(country, total)) +
geom_bar(stat = "identity", fill = "#FAAB18")  +
geom_hline(yintercept = 0, size = 1, colour="#333333") +
labs(x = "",
y = "total") +
coord_flip() +
labs(x = "",
y = "",
title = "Top Plastic Pollutant Countries",
subtitle = "Total of different types of plastics") +
theme( plot.title = element_text(family = "Helvetica", size = 20,
face = "bold", color = "#222222"),
plot.subtitle = element_text(family = "Helvetica", size = 18,
margin = margin(9, 0, 9, 0)),
axis.text = element_text(family = "Helvetica", size = 10,
color = "#222222"))
# Chunk 6
#Prepare data
plastics %>%
pivot_longer(hdpe:pvc, names_to = "plastic_type", values_to = "count") %>%
mutate(country = fct_reorder(country, grand_total)) %>%
filter(!is.na(count), count != 0) %>%
# Make Plot
ggplot(aes(plastic_type, count)) +
geom_col(fill = "#990000") +
geom_hline(yintercept = 0, size = 1, colour = "#333333") +
scale_y_continuous(labels = scales::comma) +
labs(x = "",
y = "",
title = "Types of plastic",
subtitle = "Most Plastic Type Manufactured") +
theme(axis.text.x = element_text(angle = 15),
plot.title = element_text(family = "Helvetica", size = 20, face = "bold", color = "#222222"),
plot.subtitle = element_text(family = "Helvetica", size = 16,
margin = margin(9, 0, 9, 0)),
axis.text = element_text(family = "Helvetica", size = 10,
color = "#222222"))
# Chunk 7
#Prepare data
plastics %>%
filter(!is.na(grand_total), parent_company != "Grand Total") %>%
select(-c(country, empty, num_events, volunteers)) %>%
pivot_longer(hdpe:pvc, names_to = "plastic_type", values_to = "count") %>%
group_by(parent_company) %>%
summarise(grand_sum = sum(grand_total)) %>%
arrange(desc(grand_sum)) %>%
mutate(parent_company = ifelse(parent_company == "The Coca-Cola Company",
"Coca-Cola", parent_company),
parent_company = ifelse(parent_company == "Universal Robina Corporation", "UNL Robina Corp.", parent_company)) %>%
mutate(parent_company = fct_reorder(parent_company, grand_sum)) %>%
head(10) %>%
#Make Plot
ggplot(aes(parent_company, grand_sum)) +
geom_col(fill = "#1380A1") +
geom_hline(yintercept = 0, size = 1, colour="#333333") +
scale_y_continuous(labels = scales::comma) +
labs(x = "",
y = "",
title = "Top Plastic Pollutant Company",
subtitle = "Total of different types of product manufacture") +
theme(axis.text.x = element_text(angle = 15),
plot.title = element_text(family = "Helvetica", size = 20, face = "bold", color = "#222222"),
plot.subtitle = element_text(family = "Helvetica", size = 18,
margin = margin(9, 0, 9, 0)),
axis.text = element_text(family = "Helvetica", size = 10,
color = "#222222"))
# Chunk 8
#Prepare data
top_company <- plastics %>%
filter(!is.na(grand_total), parent_company != "Grand Total") %>%
select(-c(country, empty, num_events, volunteers)) %>%
pivot_longer(hdpe:pvc, names_to = "plastic_type", values_to = "count") %>%
group_by(parent_company) %>%
summarise(grand_sum = sum(grand_total)) %>%
arrange(desc(grand_sum)) %>%
filter(parent_company != "null", parent_company != "NULL", parent_company != "Unbranded") %>%
head(10) %>%
mutate(parent_company = ifelse(parent_company == "The Coca-Cola Company",
"Coca-Cola", parent_company),
parent_company = ifelse(parent_company == "Universal Robina Corporation", "UNL Robina Corp.", parent_company)) +
mutate(parent_company = fct_reorder(parent_company, grand_sum))
#Make plot
top_company %>%
ggplot(aes(parent_company, grand_sum)) +
geom_col(fill = "#1380A1") +
geom_hline(yintercept = 0, size = 1, colour="#333333") +
geom_text(aes(y = 10000, label = grand_sum), vjust = 0.5, colour = "white") +
labs(x = "",
y = "",
title = "Top Plastic Pollutant Company",
subtitle = "Total of different types of product manufacture") +
theme(axis.text.x = element_text(angle = 15),
plot.title = element_text(family = "Helvetica", size = 20, face = "bold", color = "#222222"),
plot.subtitle = element_text(family = "Helvetica", size = 18,
margin = margin(9, 0, 9, 0)),
axis.text = element_text(family = "Helvetica", size = 10,
color = "#222222"))
#!/usr/bin/Rscript --vanilla
# compiles all .Rmd files in _R directory into .md files in Pages directory,
# if the input file is older than the output file.
# run ./knitpages.R to update all knitr files that need to be updated.
KnitPost <- function(input, outfile, figsfolder, cachefolder, base.url="/") {
# this function is a modified version of an example here:
# http://jfisher-usgs.github.com/r/2012/07/03/knitr-jekyll/
require(knitr);
opts_knit$set(base.url = base.url)
fig.path <- paste0(figsfolder, sub(".Rmd$", "", basename(input)), "/")
cache.path <- file.path(cachefolder, sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(cache.path = cache.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, outfile, envir = parent.frame())
}
knit_folder <- function(infolder, outfolder, figsfolder, cachefolder) {
for (infile in list.files(infolder, pattern = "*.Rmd", full.names = TRUE)) {
pattern = "\\d\\d\\d\\d\\-\\d\\d\\-\\d\\d\\-"
print(infile)
# folder = ifelse(grepl(pattern, infile), outfolder, "pages")
outfile = paste0(outfolder, "/", sub(".Rmd$", ".md", basename(infile)))
print(outfile)
# knit only if the input file is the last one modified
if (!file.exists(outfile) |
file.info(infile)$mtime > file.info(outfile)$mtime) {
KnitPost(infile, outfile, figsfolder, cachefolder)
}
}
}
knit_folder("_R", "_posts", "figs/", "_caches/")
#knit_folder("_R/drafts", "_drafts", "figs/drafts/")
knit_folder("../_R", "../_posts", "../figs/", "../_caches/")
#!/usr/bin/Rscript --vanilla
# compiles all .Rmd files in _R directory into .md files in Pages directory,
# if the input file is older than the output file.
# run ./knitpages.R to update all knitr files that need to be updated.
KnitPost <- function(input, outfile, figsfolder, cachefolder, base.url="/") {
# this function is a modified version of an example here:
# http://jfisher-usgs.github.com/r/2012/07/03/knitr-jekyll/
require(knitr);
opts_knit$set(base.url = base.url)
fig.path <- paste0(figsfolder, sub(".Rmd$", "", basename(input)), "/")
cache.path <- file.path(cachefolder, sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(cache.path = cache.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, outfile, envir = parent.frame())
}
knit_folder <- function(infolder, outfolder, figsfolder, cachefolder) {
for (infile in list.files(infolder, pattern = "*.Rmd", full.names = TRUE)) {
pattern = "\\d\\d\\d\\d\\-\\d\\d\\-\\d\\d\\-"
print(infile)
# folder = ifelse(grepl(pattern, infile), outfolder, "pages")
outfile = paste0(outfolder, "/", sub(".Rmd$", ".md", basename(infile)))
print(outfile)
# knit only if the input file is the last one modified
if (!file.exists(outfile) |
file.info(infile)$mtime > file.info(outfile)$mtime) {
KnitPost(infile, outfile, figsfolder, cachefolder)
}
}
}
knit_folder("_R", "_posts", "figs/", "_caches/")
#knit_folder("_R/drafts", "_drafts", "figs/drafts/")
knit_folder("../_R", "../_posts", "../figs/", "../_caches/")
#!/usr/bin/Rscript --vanilla
# compiles all .Rmd files in _R directory into .md files in Pages directory,
# if the input file is older than the output file.
# run ./knitpages.R to update all knitr files that need to be updated.
KnitPost <- function(input, outfile, figsfolder, cachefolder, base.url="/") {
# this function is a modified version of an example here:
# http://jfisher-usgs.github.com/r/2012/07/03/knitr-jekyll/
require(knitr);
opts_knit$set(base.url = base.url)
fig.path <- paste0(figsfolder, sub(".Rmd$", "", basename(input)), "/")
cache.path <- file.path(cachefolder, sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(cache.path = cache.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, outfile, envir = parent.frame())
}
knit_folder <- function(infolder, outfolder, figsfolder, cachefolder) {
for (infile in list.files(infolder, pattern = "*.Rmd", full.names = TRUE)) {
pattern = "\\d\\d\\d\\d\\-\\d\\d\\-\\d\\d\\-"
print(infile)
# folder = ifelse(grepl(pattern, infile), outfolder, "pages")
outfile = paste0(outfolder, "/", sub(".Rmd$", ".md", basename(infile)))
print(outfile)
# knit only if the input file is the last one modified
if (!file.exists(outfile) |
file.info(infile)$mtime > file.info(outfile)$mtime) {
KnitPost(infile, outfile, figsfolder, cachefolder)
}
}
}
knit_folder("_R", "_posts", "figs/", "_caches/")
#knit_folder("_R/drafts", "_drafts", "figs/drafts/")
knit_folder("../_R", "../_posts", "../figs/", "../_caches/")
