select(country, rcid, vote) %>%
mutate(vote_number = match(vote, c("no", "abstain", "yes"))-2)
unvotes %>%
select(country, rcid, vote) %>%
mutate(vote_number = match(vote, c("no", "abstain", "yes"))-2,
rcid = paste0("rcid_", rcid))
unvotes %>%
select(country, rcid, vote) %>%
mutate(vote_number = match(vote, c("no", "abstain", "yes"))-2,
rcid = paste0("rcid_", rcid)) %>%
pivot_wider(names_from = "rcid", values_from = "vote_number")
unvotes %>%
select(country, rcid, vote) %>%
mutate(vote = match(vote, c("no", "abstain", "yes"))-2,
rcid = paste0("rcid_", rcid)) %>%
pivot_wider(names_from = "rcid", values_from = "vote_number")
unvotes %>%
select(country, rcid, vote) %>%
mutate(vote = match(vote, c("no", "abstain", "yes"))-2,
rcid = paste0("rcid_", rcid)) %>%
pivot_wider(names_from = "rcid", values_from = "vote")
unvotes %>%
select(country, rcid, vote) %>%
mutate(vote = match(vote, c("no", "abstain", "yes"))-2,
rcid = paste0("rcid_", rcid)) %>%
pivot_wider(names_from = "rcid", values_from = "vote", values_fill = 0)
unvotes_df <- unvotes %>%
select(country, rcid, vote) %>%
mutate(vote = match(vote, c("no", "abstain", "yes"))-2,
rcid = paste0("rcid_", rcid)) %>%
pivot_wider(names_from = "rcid", values_from = "vote", values_fill = 0)
install.packages("tidymodels")
library(recipes)
pca_rec <- recipe(~., data = unvotes_df) %>%
update_role(country, new_role = "id") %>%
step_normalize(all_predictors()) %>%
step_pca(all_predictors())
pca_prep <- prep(pca_rec)
pca_prep
bake(pca_prep, new_data = NULL)
bake(pca_prep, new_data = NULL) %>%
ggplot(aes(PC1, PC2, label = country)) +
geom_point()
bake(pca_prep, new_data = NULL) %>%
ggplot(aes(PC1, PC2, label = country)) +
geom_point() +
geom_text(check_overlap = TRUE)
bake(pca_prep, new_data = NULL) %>%
ggplot(aes(PC1, PC2, label = country)) +
geom_point(alpha = 0.7) +
geom_text(check_overlap = TRUE)
bake(pca_prep, new_data = NULL) %>%
ggplot(aes(PC1, PC2, label = country)) +
geom_point(alpha = 0.7, size = 2) +
geom_text(check_overlap = TRUE)
bake(pca_prep, new_data = NULL) %>%
ggplot(aes(PC1, PC2, label = country)) +
geom_point(alpha = 0.7) +
geom_text(check_overlap = TRUE)
bake(pca_prep, new_data = NULL) %>%
ggplot(aes(PC1, PC2, label = country)) +
geom_point(alpha = 0.7) +
geom_text(check_overlap = TRUE, hjust = "inward")
unvotes
View(roll_calls)
View(unvotes)
View(issues)
issues %>%
unique(issue)
unique(issues$issue)
install.packages("embed")
library(embed)
pca_rec <- recipe(~., data = unvotes_df) %>%
update_role(country, new_role = "id") %>%
step_normalize(all_predictors()) %>%
step_umap(all_predictors())
library(recipes)
pca_rec <- recipe(~., data = unvotes_df) %>%
update_role(country, new_role = "id") %>%
step_normalize(all_predictors()) %>%
step_pca(all_predictors())
pca_prep <- prep(pca_rec)
bake(pca_prep, new_data = NULL) %>%
ggplot(aes(PC1, PC2, label = country)) +
geom_point(alpha = 0.7) +
geom_text(check_overlap = TRUE, hjust = "inward")
library(embed)
umap_rec <- recipe(~., data = unvotes_df) %>%
update_role(country, new_role = "id") %>%
step_normalize(all_predictors()) %>%
step_umap(all_predictors())
umap_prep <- prep(umap_rec)
bake(umap_prep, new_data = NULL) %>%
ggplot(aes(PC1, PC2, label = country)) +
geom_point(alpha = 0.7) +
geom_text(check_overlap = TRUE, hjust = "inward")
library(embed)
umap_rec <- recipe(~., data = unvotes_df) %>%
update_role(country, new_role = "id") %>%
step_normalize(all_predictors()) %>%
step_umap(all_predictors())
umap_prep <- prep(umap_rec)
bake(umap_prep, new_data = NULL) %>%
ggplot(aes(umap_1, umap_2, label = country)) +
geom_point(alpha = 0.7) +
geom_text(check_overlap = TRUE, hjust = "inward")
tidy(pca_prep, 2)
tidy(pca_prep, 2) %>%
filter(component %in% paste0("PC", 1:4))
tidy(pca_prep, 2) %>%
filter(component %in% paste0("PC", 1:4)) %>%
left_join(issues %>% mutate(terms = paste0("rcid_", rcid))) %>%
filter(!is.na(issue)) %>%
group_by(component)
tidy(pca_prep, 2) %>%
filter(component %in% paste0("PC", 1:4)) %>%
left_join(issues %>% mutate(terms = paste0("rcid_", rcid))) %>%
filter(!is.na(issue)) %>%
group_by(component) %>%
slice_max(abs(value), n = 8) %>%
ungroup()
pca_comps %>%
mutate(value = abs(value)) %>%
ggplot(aes(value, terms, fill = issue)) +
geom_col(position = "dodge") +
facet_wrap(~component, scales = "free_y") +
labs(y = NULL, fill = NULL,
x  = "Absolute value of contribution")
pca_comps <- tidy(pca_prep, 2) %>%
filter(component %in% paste0("PC", 1:4)) %>%
left_join(issues %>% mutate(terms = paste0("rcid_", rcid))) %>%
filter(!is.na(issue)) %>%
group_by(component) %>%
slice_max(abs(value), n = 8) %>%
ungroup()
pca_comps %>%
mutate(value = abs(value)) %>%
ggplot(aes(value, terms, fill = issue)) +
geom_col(position = "dodge") +
facet_wrap(~component, scales = "free_y") +
labs(y = NULL, fill = NULL,
x  = "Absolute value of contribution")
install.packages("rvest")
install.packages("polite")
# theme
theme_set(theme_light())
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE, cache = TRUE)
# packages
library(tidyverse)
# theme
theme_set(theme_light())
forest <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-04-06/forest.csv')
forest_area <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-04-06/forest_area.csv')
brazil_loss <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-04-06/brazil_loss.csv')
soybean_use <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-04-06/soybean_use.csv')
vegetable_oil <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-04-06/vegetable_oil.csv')
View(brazil_loss)
View(forest)
View(forest_area)
View(vegetable_oil)
View(soybean_use)
View(vegetable_oil)
vegetable_oil <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-04-06/vegetable_oil.csv')
soybean_use <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-04-06/soybean_use.csv')
brazil_loss <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-04-06/brazil_loss.csv')
View(vegetable_oil)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE, cache = TRUE)
# packages
library(tidyverse)
# theme
theme_set(theme_light())
post_offices <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-04-13/post_offices.csv')
View(post_offices)
View(post_offices)
View(post_offices)
post_offices_years <- post_offices %>%
select(name, state, established. discontinued) %>%
replace_na(list(discontinued = 2003))
post_offices_years <- post_offices %>%
select(name, state, established, discontinued) %>%
replace_na(list(discontinued = 2003))
?map2
post_offices_years <- post_offices %>%
select(name, state, established, discontinued) %>%
replace_na(list(discontinued = 2003)) %>%
filter(established >= 1750,
discontinued  <= 2021) %>%
mutate(year = map2(established, discontinued, seq)) %>%
unnest(year)
post_offices_years %>%
count(year, name = "n_post_offices") %>%
arrange(desc(year)) %>%
ggplot(aes(year, n_post_offices)) +
geom_area()
post_offices_years %>%
count(year, name = "n_post_offices") %>%
arrange(desc(year)) %>%
ggplot(aes(year, n_post_offices)) +
geom_area()
post_offices <- post_offices %>%
filter(established >= 1700, |
is.na(discontinued) | discontinued <= 2021)
post_offices <- post_offices %>%
filter(established >= 1700,
is.na(discontinued) | discontinued <= 2021)
post_offices_years <- post_offices %>%
select(name, state, established, discontinued) %>%
replace_na(list(discontinued = 2003)) %>%
filter(established >= 1750,
discontinued  <= 2021) %>%
mutate(year = map2(established, discontinued, seq)) %>%
unnest(year)
post_offices <- post_offices %>%
filter(established >= 1700,
is.na(discontinued) | discontinued >= established)
post_offices_years <- post_offices %>%
select(name, state, established, discontinued) %>%
replace_na(list(discontinued = 2003)) %>%
filter(established >= 1750,
discontinued  <= 2021) %>%
mutate(year = map2(established, discontinued, seq)) %>%
unnest(year)
post_offices_years %>%
count(year, name = "n_post_offices") %>%
arrange(desc(year)) %>%
ggplot(aes(year, n_post_offices)) +
geom_area()
post_offices_years %>%
count(year,
state = fct_lump(state, 16),
name = "n_post_offices") %>%
mutate() %>%
filter(state != "Other") %>%
ggplot(aes(year, n_post_offices, fill = state))  +
geom_area() +
facet_wrap(~ state)
post_offices_years %>%
count(year,
state = fct_lump(state, 16),
name = "n_post_offices") %>%
mutate(state = fct_reorder(state, -n_post_offices, sum)) %>%
filter(state != "Other") %>%
ggplot(aes(year, n_post_offices, fill = state))  +
geom_area() +
facet_wrap(~ state)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE, cache = TRUE)
# packages
library(tidyverse)
# theme
theme_set(theme_light())
# theme
theme_set(theme_light())
netflix_titles <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-04-20/netflix_titles.csv')
View(netflix_titles)
netflix_titles %>%
count(release_year)
netflix_titles %>%
summarise(min(release_year), max(release_year))
netflix_titles %>%
ggplot(aes(release_year)) +
geom_histogram(bindwith = 5)
netflix_titles %>%
filter(release_year >= 1925) %>%
ggplot(aes(release_year)) +
geom_histogram(bindwith = 5)
netflix_titles %>%
filter(release_year >= 1975) %>%
ggplot(aes(release_year)) +
geom_histogram(bindwith = 5)
netflix_titles %>%
filter(release_year >= 1975) %>%
ggplot(aes(release_year)) +
geom_histogram(bindwith = 5, fill = type)
netflix_titles %>%
filter(release_year >= 1975) %>%
ggplot(aes(release_year, fill = type)) +
geom_histogram(bindwith = 5)
netflix_titles %>%
ggplot(aes(release_year)) +
geom_histogram(bindwith = 5) +
facet_wrap(~ type)
netflix_titles %>%
ggplot(aes(release_year)) +
geom_histogram(bindwith = 5) +
facet_wrap(~ type, column = 1)
netflix_titles %>%
ggplot(aes(release_year)) +
geom_histogram(bindwith = 5) +
facet_wrap(~ type, ncol = 1)
netflix_titles %>%
ggplot(aes(release_year, fill = type)) +
geom_histogram(bindwith = 5) +
facet_wrap(~ type, ncol = 1)
netflix_titles %>%
ggplot(aes(release_year, fill = type)) +
geom_histogram(bindwith = 5) +
facet_wrap(~ type, ncol = 1, scales = "free_y")
View(netflix_titles)
netflix_titles %>%
separate(duration, c("duration", "duration_units"), sep = " ", convert = TRUE)
netflix_titles
View(netflix_titles)
View(netflix_titles)
netflix_titles %>%
separate(duration, c("duration", "duration_units"), sep = " ", convert = TRUE)
View(netflix_titles)
netflix_titles %>%
separate(duration, c("duration", "duration_units"), sep = " ", convert = TRUE)
View(netflix_titles)
netflix_titles %>%
separate(duration, c("duration", "duration_units"), sep = " ", convert = TRUE)
View(netflix_titles)
netflix_titles <- netflix_titles %>%
separate(duration, c("duration", "duration_units"), sep = " ", convert = TRUE)
View(netflix_titles)
netflix_titles %>%
filter(type == "Movie")
netflix_titles %>%
filter(type == "Movie") %>%
mutate(decade = 10 * (release_year %/% 10)) %>%
ggplot(aes(decade, duration)) +
geom_boxplot()
netflix_titles %>%
filter(type == "Movie") %>%
mutate(decade = 10 * (release_year %/% 10)) %>%
ggplot(aes(decade, duration, group = decade)) +
geom_boxplot()
?pivot_longer()
netflix_titles %>%
seperate_rows(listed_in, ",")
netflix_titles %>%
separate_rows(listed_in, ",")
netflix_titles %>%
separate_rows(listed_in, sep = ",")
netflix_titles %>%
separate_rows(listed_in, sep = ",") %>%
group_by(type. genre = listed_in)
netflix_titles %>%
separate_rows(listed_in, sep = ",") %>%
group_by(type, genre = listed_in) %>%
summarise(n = n(),  median_duration = median(duration))
netflix_titles %>%
separate_rows(listed_in, sep = ",") %>%
group_by(type, genre = listed_in) %>%
summarise(n = n(),  median_duration = median(duration)) %>%
arrange(desc(n)) %>%
filter(type == "Movie", genre != "Movies") %>%
mutate(genre = fct_reorder(genre, median_duration)) %>%
ggplot(aes(median_duration, genre)) +
geom_col()
netflix_titles %>%
separate_rows(listed_in, sep = ", ") %>%
group_by(type, genre = listed_in) %>%
summarise(n = n(),  median_duration = median(duration)) %>%
arrange(desc(n)) %>%
filter(type == "Movie", genre != "Movies") %>%
mutate(genre = fct_reorder(genre, median_duration)) %>%
ggplot(aes(median_duration, genre)) +
geom_col()
netflix_titles %>%
filter(!is.na(data_added))
netflix_titles %>%
filter(!is.na(date_added))
netflix_titles %>%
filter(!is.na(date_added)) %>%
count(year_added = year(date_added))
netflix_titles %>%
filter(!is.na(date_added)) %>%
count(year_added = year(date_added))
netflix_titles %>%
count(year_added = year(date_added))
netflix_titles %>%
count(year_added = year(date_added))
netflix_titles <- netflix_titles %>%
separate(duration, c("duration", "duration_units"), sep = " ", convert = TRUE) %>%
mutate(date_added = mdy(date_added))
netflix_titles %>%
filter(!is.na(date_added)) %>%
count(year_added = year(date_added))
netflix_titles <- netflix_titles %>%
separate(duration, c("duration", "duration_units"), sep = " ", convert = TRUE) %>%
mutate(date_added = mdy(date_added))
summarize_titles() <- function(tbl) {
summarise(n = n(),  median_duration = median(duration),
median_year = median(year)) %>%
arrange(desc(n))
}
summarize_titles <- function(tbl) {
summarise(n = n(),  median_duration = median(duration),
median_year = median(year)) %>%
arrange(desc(n))
}
netflix_titles <- netflix_titles %>%
separate(duration, c("duration", "duration_units"), sep = " ", convert = TRUE) %>%
mutate(date_added = mdy(date_added))
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE, cache = TRUE)
# packages
library(tidyverse)
library(lubridate)
# theme
theme_set(theme_light())
netflix_titles <- netflix_titles %>%
separate(duration, c("duration", "duration_units"), sep = " ", convert = TRUE) %>%
mutate(date_added = mdy(date_added))
netflix_titles %>%
filter(!is.na(date_added)) %>%
count(year_added = year(date_added))
netflix_titles %>%
mutate(year_added = pmax(year_added, 2015))
netflix_titles %>%
mutate(year_added = pmax(year_added, 2015)) %>%
filter(!is.na(date_added), !is.na(rating))
netflix_titles <- netflix_titles %>%
separate(duration, c("duration", "duration_units"), sep = " ", convert = TRUE) %>%
mutate(date_added = mdy(date_added))
netflix_titles <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-04-20/netflix_titles.csv')
netflix_titles <- netflix_titles %>%
separate(duration, c("duration", "duration_units"), sep = " ", convert = TRUE) %>%
mutate(date_added = mdy(date_added))
summarise(n = n(),  median_duration = median(duration),
median_year = median(year)) %>%
arrange(desc(n))
netflix_titles %>%
ggplot(aes(release_year, fill = type)) +
geom_histogram(bindwith = 5) +
facet_wrap(~ type, ncol = 1, scales = "free_y")
netflix_titles %>%
filter(type == "Movie") %>%
mutate(decade = 10 * (release_year %/% 10)) %>%
ggplot(aes(decade, duration, group = decade)) +
geom_boxplot()
netflix_titles %>%
separate_rows(listed_in, sep = ", ") %>%
group_by(type, genre = listed_in) %>%
summarise(n = n(),  median_duration = median(duration)) %>%
arrange(desc(n)) %>%
filter(type == "Movie", genre != "Movies") %>%
mutate(genre = fct_reorder(genre, median_duration)) %>%
ggplot(aes(median_duration, genre)) +
geom_col()
netflix_titles %>%
mutate(year_added = pmax(year_added, 2015)) %>%
filter(!is.na(date_added), !is.na(rating))
netflix_titles %>%
mutate(year_added = pmax(date_added, 2015)) %>%
filter(!is.na(date_added), !is.na(rating)) %>%
ggplot(aes(year_added, n, fill = rating)) +
geom_area()
netflix_titles %>%
filter(!is.na(date_added), !is.na(rating)) %>%
mutate(year_added = pmax(date_added, 2015)) %>%
ggplot(aes(year_added, n, fill = rating)) +
geom_area()
netflix_titles %>%
filter(!is.na(date_added), !is.na(rating)) %>%
mutate(year_added = pmax(date_added, 2015)) %>%
count(year_added, rating = fct_lump(rating, 6)) %>%
ggplot(aes(year_added, n, fill = rating)) +
geom_area()
netflix_titles %>%
filter(!is.na(date_added), !is.na(rating)) %>%
count(year_added, rating = fct_lump(rating, 6)) %>%
ggplot(aes(year_added, n, fill = rating)) +
geom_area()
netflix_titles %>%
filter(!is.na(date_added)) %>%
count(year_added, rating = fct_lump(rating, 6)) %>%
ggplot(aes(year_added, n, fill = rating)) +
geom_area()
View(netflix_titles)
netflix_titles %>%
filter(!is.na(date_added)) %>%
mutate(year_added = pmax(year(date_added), 2015))
?pmax()
netflix_titles <- netflix_titles %>%
separate(duration, c("duration", "duration_units"), sep = " ", convert = TRUE) %>%
mutate(date_added = mdy(date_added),
year_added = year(date_added))
netflix_titles %>%
filter(!is.na(date_added)) %>%
mutate(year_added = pmax(year(date_added), 2015))
netflix_titles %>%
filter(!is.na(date_added)) %>%
mutate(year_added = pmax(year(date_added), 2015)) %>%
count(year_added. rating) %>%
ggplot(aes(year_added, n, fill = type)) +
geom_area()
netflix_titles %>%
filter(!is.na(date_added)) %>%
mutate(year_added = pmax(year(date_added), 2015)) %>%
count(year_added, rating) %>%
ggplot(aes(year_added, n, fill = type)) +
geom_area()
netflix_titles %>%
filter(!is.na(date_added)) %>%
mutate(year_added = pmax(year(date_added), 2015)) %>%
count(year_added, rating) %>%
ggplot(aes(year_added, n, fill = type)) +
geom_area()
netflix_titles %>%
ggplot(aes(release_year, fill = type)) +
geom_histogram(bindwith = 5) +
facet_wrap(~ type, ncol = 1, scales = "free_y")
netflix_titles %>%
filter(!is.na(date_added)) %>%
mutate(year_added = pmax(year(date_added), 2015)) %>%
count(year_added, rating)
netflix_titles %>%
filter(!is.na(date_added)) %>%
count(year_added, rating) %>%
ggplot(aes(year_added, n, fill = rating)) +
geom_area()
