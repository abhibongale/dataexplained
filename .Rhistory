y = 'Actual Annual Salary') +
scale_x_continuous(labels = scales::dollar_format()) +
scale_y_continuous(labels = scales::dollar_format())
rf_prediction <- rf_fit %>%
collect_predictions()
View(rf_prediction)
# Chunk 1
library(tidyverse)
library(tidymodels)
# Chunk 2
survey_raw <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-05-18/survey.csv')
# Chunk 3
survey  <- survey_raw %>%
filter(gender == "Woman", annual_salary >= 5000, annual_salary <= 2e6, currency == "USD",
!is.na(how_old_are_you)) %>%
mutate(age_category = fct_reorder(how_old_are_you, parse_number(how_old_are_you)),
age_category = fct_relevel(age_category,"under 18"),
overall_experience = fct_reorder(str_replace(overall_years_of_professional_experience,
" - ", "-"),
parse_number(overall_years_of_professional_experience)),
field_experience = fct_reorder(str_replace(years_of_experience_in_field, " - ", "-"),
parse_number(years_of_experience_in_field)),
education = factor(highest_level_of_education_completed)
) %>%
select(-c(how_old_are_you,
years_of_experience_in_field,
overall_years_of_professional_experience,
timestamp, job_title, additional_context_on_income,
additional_context_on_job_title, currency, other_monetary_comp, currency_other,
country, race, gender, highest_level_of_education_completed))
# Chunk 4
survey %>%
filter(!is.na(industry)) %>%
mutate(industry = fct_lump(industry, 8)) %>%
lm(annual_salary ~ industry, data = .) %>%
summary()
# Chunk 5
survey %>%
filter(annual_salary > 5000, annual_salary <= 2e6) %>%
ggplot(aes(log2(annual_salary))) +
geom_histogram(aes(fill = overall_experience)) +
scale_x_continuous(label = scales::dollar_format())  +
facet_wrap(~field_experience)
# Chunk 6
survey %>%
filter(!is.na(industry)) %>%
mutate(industry = fct_lump(industry, 8),
state = fct_lump(state, 8)) %>%
glm(annual_salary ~ industry + field_experience + overall_experience + age_category + state + education, data = .) %>%
summary()
# Chunk 7
set.seed(2021)
survey_split <- initial_split(survey)
survey_train <- training(survey_split)
survey_test <- testing(survey_split)
# Chunk 8
survey_recipe <- survey %>%
recipe(annual_salary ~ .) %>%
#step_log(annual_salary, base = 10) %>%
step_unknown(all_nominal()) %>%
step_other(all_nominal()) %>%
step_center(all_predictors()) %>%
step_dummy(all_nominal()) %>%
prep()
survey_train_prep <- bake(survey_recipe, survey_train)
survey_test_prep <- bake(survey_recipe, survey_test)
# Chunk 9
lin_reg <- linear_reg(penalty = 0.1) %>%
set_engine("lm") %>%
set_mode("regression")
rf_model <-
# specify that the model is a random forest
rand_forest() %>%
# select the engine/package that underlies the model
set_engine("ranger") %>%
# choose either the continuous regression or binary classification mode
set_mode("regression")
# Chunk 10
lin_workflow <- # new workflow object
workflow() %>% # use workflow function
add_recipe(survey_recipe) %>%   # use the new recipe
add_model(lin_reg)   # add your model spec
rf_workflow <- workflow() %>%
add_recipe(survey_recipe) %>%
add_model(rf_model)
# Chunk 11
lin_fit <- lin_workflow %>%
last_fit(survey_split)
rf_fit <- rf_workflow %>%
last_fit(survey_split)
# Chunk 12
lin_prediction <- lin_fit %>%
collect_predictions()
lin_performance <- lin_fit %>%
collect_metrics(summarize = TRUE)
rf_prediction <- rf_fit %>%
collect_predictions()
rf_performance <- rf_fit %>%
collect_metrics(summarize = TRUE)
# Chunk 13
lin_fit %>%
collect_metrics()
rf.model <- rand_forest() %>%
set_engine(engine = "ranger") %>%
set_mode(mode = "regression") %>%
fit(annual_salary ~ ., data  = survey_train_prep)
rf_predict <- rf.model %>%
predict(survey_test_prep) %>%
bind_cols(survey_test_prep)
# Chunk 14
rf_predict %>%
ggplot(mapping = aes(x = .pred, y = annual_salary)) +
geom_point(color = '#006EA1', alpha = 0.25) +
geom_abline(intercept = 0, slope = 1, color = 'orange') +
labs(title = 'Linear Regression Results -Annual Salary Test Set',
x = 'Predicted Annual Salary',
y = 'Actual Annual Salary') +
scale_x_continuous(labels = scales::dollar_format()) +
scale_y_continuous(labels = scales::dollar_format())
# Chunk 1
library(tidyverse)
library(tidymodels)
# Chunk 2
survey_raw <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-05-18/survey.csv')
# Chunk 3
survey  <- survey_raw %>%
filter(gender == "Woman", annual_salary >= 5000, annual_salary <= 2e6, currency == "USD",
!is.na(how_old_are_you)) %>%
mutate(age_category = fct_reorder(how_old_are_you, parse_number(how_old_are_you)),
age_category = fct_relevel(age_category,"under 18"),
overall_experience = fct_reorder(str_replace(overall_years_of_professional_experience,
" - ", "-"),
parse_number(overall_years_of_professional_experience)),
field_experience = fct_reorder(str_replace(years_of_experience_in_field, " - ", "-"),
parse_number(years_of_experience_in_field)),
education = factor(highest_level_of_education_completed)
) %>%
select(-c(how_old_are_you,
years_of_experience_in_field,
overall_years_of_professional_experience,
timestamp, job_title, additional_context_on_income,
additional_context_on_job_title, currency, other_monetary_comp, currency_other,
country, race, gender, highest_level_of_education_completed))
# Chunk 4
survey %>%
filter(!is.na(industry)) %>%
mutate(industry = fct_lump(industry, 8)) %>%
lm(annual_salary ~ industry, data = .) %>%
summary()
# Chunk 5
survey %>%
filter(annual_salary > 5000, annual_salary <= 2e6) %>%
ggplot(aes(log2(annual_salary))) +
geom_histogram(aes(fill = overall_experience)) +
scale_x_continuous(label = scales::dollar_format())  +
facet_wrap(~field_experience)
# Chunk 6
survey %>%
filter(!is.na(industry)) %>%
mutate(industry = fct_lump(industry, 8),
state = fct_lump(state, 8)) %>%
glm(annual_salary ~ industry + field_experience + overall_experience + age_category + state + education, data = .) %>%
summary()
# Chunk 7
set.seed(2021)
survey_split <- initial_split(survey)
survey_train <- training(survey_split)
survey_test <- testing(survey_split)
# Chunk 8
survey_recipe <- survey %>%
recipe(annual_salary ~ .) %>%
#step_log(annual_salary, base = 10) %>%
step_unknown(all_nominal()) %>%
step_other(all_nominal()) %>%
step_center(all_predictors()) %>%
step_dummy(all_nominal()) %>%
prep()
survey_train_prep <- bake(survey_recipe, survey_train)
survey_test_prep <- bake(survey_recipe, survey_test)
# Chunk 9
lin_reg <- linear_reg(penalty = 0.1) %>%
set_engine("lm") %>%
set_mode("regression")
rf_model <-
# specify that the model is a random forest
rand_forest() %>%
# select the engine/package that underlies the model
set_engine("ranger") %>%
# choose either the continuous regression or binary classification mode
set_mode("regression")
# Chunk 10
lin_workflow <- # new workflow object
workflow() %>% # use workflow function
add_recipe(survey_recipe) %>%   # use the new recipe
add_model(lin_reg)   # add your model spec
rf_workflow <- workflow() %>%
add_recipe(survey_recipe) %>%
add_model(rf_model)
# Chunk 11
lin_fit <- lin_workflow %>%
last_fit(survey_split)
rf_fit <- rf_workflow %>%
last_fit(survey_split)
# Chunk 12
lin_prediction <- lin_fit %>%
collect_predictions()
lin_performance <- lin_fit %>%
collect_metrics(summarize = TRUE)
rf_prediction <- rf_fit %>%
collect_predictions()
rf_performance <- rf_fit %>%
collect_metrics(summarize = TRUE)
# Chunk 13
lin_fit %>%
collect_metrics()
rf.model <- rand_forest() %>%
set_engine(engine = "ranger") %>%
set_mode(mode = "regression") %>%
fit(annual_salary ~ ., data  = survey_train_prep)
rf_predict <- rf.model %>%
predict(survey_test_prep) %>%
bind_cols(survey_test_prep)
# Chunk 14
rf_predict %>%
ggplot(mapping = aes(x = .pred, y = annual_salary)) +
geom_point(color = '#006EA1', alpha = 0.25) +
geom_abline(intercept = 0, slope = 1, color = 'orange') +
labs(title = 'Linear Regression Results -Annual Salary Test Set',
x = 'Predicted Annual Salary',
y = 'Actual Annual Salary') +
scale_x_continuous(labels = scales::dollar_format()) +
scale_y_continuous(labels = scales::dollar_format())
View(lin_performance)
View(lin_prediction)
View(survey_test_prep)
View(survey_train_prep)
# Chunk 1
library(tidyverse)
library(tidymodels)
# Chunk 2
survey_raw <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-05-18/survey.csv')
# Chunk 3
survey  <- survey_raw %>%
filter(gender == "Woman", annual_salary >= 5000, annual_salary <= 2e6, currency == "USD",
!is.na(how_old_are_you)) %>%
mutate(age_category = fct_reorder(how_old_are_you, parse_number(how_old_are_you)),
age_category = fct_relevel(age_category,"under 18"),
overall_experience = fct_reorder(str_replace(overall_years_of_professional_experience,
" - ", "-"),
parse_number(overall_years_of_professional_experience)),
field_experience = fct_reorder(str_replace(years_of_experience_in_field, " - ", "-"),
parse_number(years_of_experience_in_field)),
education = factor(highest_level_of_education_completed)
) %>%
select(-c(how_old_are_you,
years_of_experience_in_field,
overall_years_of_professional_experience,
timestamp, job_title, additional_context_on_income,
additional_context_on_job_title, currency, other_monetary_comp, currency_other,
country, race, gender, highest_level_of_education_completed))
# Chunk 4
survey %>%
filter(!is.na(industry)) %>%
mutate(industry = fct_lump(industry, 8)) %>%
lm(annual_salary ~ industry, data = .) %>%
summary()
# Chunk 5
survey %>%
filter(annual_salary > 5000, annual_salary <= 2e6) %>%
ggplot(aes(log2(annual_salary))) +
geom_histogram(aes(fill = overall_experience)) +
scale_x_continuous(label = scales::dollar_format())  +
facet_wrap(~field_experience)
# Chunk 6
survey %>%
filter(!is.na(industry)) %>%
mutate(industry = fct_lump(industry, 8),
state = fct_lump(state, 8)) %>%
glm(annual_salary ~ industry + field_experience + overall_experience + age_category + state + education, data = .) %>%
summary()
# Chunk 7
set.seed(2021)
survey_split <- initial_split(survey)
survey_train <- training(survey_split)
survey_test <- testing(survey_split)
# Chunk 8
survey_recipe <- survey %>%
recipe(annual_salary ~ .) %>%
#step_log(annual_salary, base = 10) %>%
step_unknown(all_nominal()) %>%
step_other(all_nominal()) %>%
step_center(all_numeric()) %>%
step_novel(all_nominal()) %>%
step_dummy(all_nominal()) %>%
prep()
survey_train_prep <- bake(survey_recipe, survey_train)
survey_test_prep <- bake(survey_recipe, survey_test)
# Chunk 9
lin_reg <- linear_reg(penalty = 0.1) %>%
set_engine("lm") %>%
set_mode("regression")
rf_model <-
# specify that the model is a random forest
rand_forest() %>%
# select the engine/package that underlies the model
set_engine("ranger") %>%
# choose either the continuous regression or binary classification mode
set_mode("regression")
# Chunk 10
lin_workflow <- # new workflow object
workflow() %>% # use workflow function
add_recipe(survey_recipe) %>%   # use the new recipe
add_model(lin_reg)   # add your model spec
rf_workflow <- workflow() %>%
add_recipe(survey_recipe) %>%
add_model(rf_model)
# Chunk 11
lin_fit <- lin_workflow %>%
last_fit(survey_split)
rf_fit <- rf_workflow %>%
last_fit(survey_split)
# Chunk 12
lin_prediction <- lin_fit %>%
collect_predictions()
lin_performance <- lin_fit %>%
collect_metrics(summarize = TRUE)
rf_prediction <- rf_fit %>%
collect_predictions()
rf_performance <- rf_fit %>%
collect_metrics(summarize = TRUE)
# Chunk 13
lin_fit %>%
collect_metrics()
rf.model <- rand_forest() %>%
set_engine(engine = "ranger") %>%
set_mode(mode = "regression") %>%
fit(annual_salary ~ ., data  = survey_train_prep)
rf_predict <- rf.model %>%
predict(survey_test_prep) %>%
bind_cols(survey_test_prep)
# Chunk 14
rf_predict %>%
ggplot(mapping = aes(x = .pred, y = annual_salary)) +
geom_point(color = '#006EA1', alpha = 0.25) +
geom_abline(intercept = 0, slope = 1, color = 'orange') +
labs(title = 'Linear Regression Results -Annual Salary Test Set',
x = 'Predicted Annual Salary',
y = 'Actual Annual Salary') +
scale_x_continuous(labels = scales::dollar_format()) +
scale_y_continuous(labels = scales::dollar_format())
survey_raw <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-05-18/survey.csv')
library(tidyverse)
library(tidymodels)
survey_raw <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-05-18/survey.csv')
survey  <- survey_raw %>%
filter(gender == "Woman", annual_salary >= 5000, annual_salary <= 2e6, currency == "USD",
!is.na(how_old_are_you)) %>%
mutate(age_category = fct_reorder(how_old_are_you, parse_number(how_old_are_you)),
age_category = fct_relevel(age_category,"under 18"),
overall_experience = fct_reorder(str_replace(overall_years_of_professional_experience,
" - ", "-"),
parse_number(overall_years_of_professional_experience)),
field_experience = fct_reorder(str_replace(years_of_experience_in_field, " - ", "-"),
parse_number(years_of_experience_in_field)),
education = factor(highest_level_of_education_completed)
) %>%
select(-c(how_old_are_you,
years_of_experience_in_field,
overall_years_of_professional_experience,
timestamp, job_title, additional_context_on_income,
additional_context_on_job_title, currency, other_monetary_comp, currency_other,
country, race, gender, highest_level_of_education_completed))
survey %>%
filter(!is.na(industry)) %>%
mutate(industry = fct_lump(industry, 8)) %>%
lm(annual_salary ~ industry, data = .) %>%
summary()
survey %>%
filter(annual_salary > 5000, annual_salary <= 2e6) %>%
ggplot(aes(log2(annual_salary))) +
geom_histogram(aes(fill = overall_experience)) +
scale_x_continuous(label = scales::dollar_format())  +
facet_wrap(~field_experience)
survey %>%
filter(annual_salary > 5000, annual_salary <= 2e6) %>%
ggplot(aes(annual_salary)) +
geom_histogram(aes(fill = overall_experience)) +
scale_x_continuous(label = scales::dollar_format())  +
facet_wrap(~field_experience)
survey %>%
filter(annual_salary > 5000, annual_salary <= 2e6) %>%
ggplot(aes(annual_salary)) +
geom_histogram(aes(fill = overall_experience)) +
scale_x_continuous(label = scales::dollar_format())  +
facet_wrap(~field_experience)
survey %>%
filter(annual_salary > 5000, annual_salary <= 2e6) %>%
ggplot(aes(log10(annual_salary))) +
geom_histogram(aes(fill = overall_experience)) +
scale_x_continuous(label = scales::dollar_format())  +
facet_wrap(~field_experience)
survey %>%
filter(!is.na(industry)) %>%
mutate(industry = fct_lump(industry, 8),
state = fct_lump(state, 8)) %>%
glm(annual_salary ~ industry + field_experience + overall_experience + age_category + state + education, data = .) %>%
summary()
set.seed(2021)
survey_split <- initial_split(survey)
survey_train <- training(survey_split)
survey_test <- testing(survey_split)
survey_recipe <- survey %>%
recipe(annual_salary ~ .) %>%
#step_log(annual_salary, base = 10) %>%
step_unknown(all_nominal()) %>%
step_other(all_nominal()) %>%
step_center(all_numeric()) %>%
step_novel(all_nominal()) %>%
step_dummy(all_nominal()) %>%
prep()
survey_train_prep <- bake(survey_recipe, survey_train)
survey_test_prep <- bake(survey_recipe, survey_test)
lin_reg <- linear_reg(penalty = 0.1) %>%
set_engine("lm") %>%
set_mode("regression")
rf_model <-
# specify that the model is a random forest
rand_forest() %>%
# select the engine/package that underlies the model
set_engine("ranger") %>%
# choose either the continuous regression or binary classification mode
set_mode("regression")
View(survey)
survey %>%
filter(annual_salary > 5000, annual_salary <= 2e6) %>%
ggplot(aes(log10(annual_salary))) +
geom_histogram(aes(fill = overall_experience)) +
scale_x_continuous(label = scales::dollar_format())  +
facet_wrap(~field_experience)
survey %>%
ggplot(aes(log(annual_salary))) +
geom_freqpoly()
survey %>%
ggplot(aes(log(annual_salary))) +
geom_freqpoly(fill ="#1380A1")
survey %>%
ggplot(aes(log(annual_salary))) +
geom_freqpoly(aes(fill ="#1380A1"))
survey %>%
ggplot(aes(log(annual_salary))) +
geom_freqpoly() +
scale_fill_manual(values = "#1380A1"))
survey %>%
ggplot(aes(log(annual_salary))) +
geom_freqpoly() +
scale_fill_manual(values = "#1380A1"))
survey %>%
ggplot(aes(log(annual_salary))) +
geom_freqpoly() +
scale_fill_manual(values = "#1380A1")
survey %>%
ggplot(aes(log(annual_salary))) +
geom_histogram() +
scale_fill_manual(values = "#1380A1")
survey %>%
ggplot(aes(log(annual_salary))) +
geom_histogram() +
scale_fill_manual(values = "#1380A1")
survey %>%
ggplot(aes(log(annual_salary))) +
geom_histogram() +
scale_color_manual(values = "#1380A1")
survey %>%
ggplot(aes(log(annual_salary))) +
geom_histogram(fill = "#1380A1") +
scale_color_manual(values = "#1380A1")
survey %>%
ggplot(aes(log(annual_salary))) +
geom_histogram(fill = "#1380A1") +
scale_x_log10()
survey %>%
ggplot(aes(log(annual_salary))) +
geom_histogram(fill = "#1380A1") +
scale_x_log10(label = scales::dollar_format())
survey %>%
ggplot(aes(log(annual_salary))) +
geom_histogram(fill = "#1380A1") +
scale_x_log10(label = scales::dollar_format()) +
labs(x = "Annual Salary in log scale")
survey %>%
ggplot(aes(log(annual_salary))) +
geom_histogram(fill = "#1380A1") +
scale_x_log10(label = scales::dollar_format()) +
labs(x = "Annual Salary in log scale", y = "Frequency")
survey %>%
ggplot(aes(state)) +
geom_histogram()
survey %>%
ggplot(aes(state)) +
geom_histogram(stat = "count")
survey %>%
mutate(state = fct_lump(state, 8)) %>%
ggplot(aes(state)) +
geom_histogram(stat = "count")
survey %>%
mutate(state = fct_lump(state, 10)) %>%
ggplot(aes(state)) +
geom_histogram(stat = "count")
survey %>%
mutate(state = fct_lump(state, 10)) %>%
ggplot(aes(state)) +
geom_histogram(stat = "count")
