theme(legend.position = "top",
legend.text = element_text(family = "Helvetica", size = 14),
axis.text = element_text(family = "Helvetica", size = 14),
axis.title = element_text(family = "Helvetica", size = 14))
artwork %>%
filter(!is.na(width) | !is.na(height)) %>%
mutate(dim = width*height) %>%
ggplot(aes(x = year, y = log10(dim))) +
geom_point(colour = "#990000") +
geom_smooth(method = "glm", colour = "#555555") +
# Labels
labs(fill = "", y = "Dimensions", x = "Year") +
# theme
theme(legend.position = "top",
legend.text = element_text(family = "Helvetica", size = 14),
axis.text = element_text(family = "Helvetica", size = 14),
axis.title = element_text(family = "Helvetica", size = 14))
artwork %>%
filter(!is.na(width) | !is.na(height)) %>%
mutate(dim = width*height) %>%
ggplot(aes(x = year, y = log10(dim))) +
geom_point(colour = "#FAAB18") +
geom_smooth(method = "glm", colour = "#555555") +
# Labels
labs(fill = "", y = "Dimensions", x = "Year") +
# theme
theme(legend.position = "top",
legend.text = element_text(family = "Helvetica", size = 14),
axis.text = element_text(family = "Helvetica", size = 14),
axis.title = element_text(family = "Helvetica", size = 14))
artwork %>%
filter(!is.na(width) | !is.na(height)) %>%
mutate(dim = width*height) %>%
ggplot(aes(x = year, y = log10(dim))) +
geom_point(colour = "#FAAB18") +
geom_smooth(method = "glm", colour = "#555555") +
# Labels
labs(fill = "", y = "Dimensions",
x = "Year", title = "Art Dimensions") +
# theme
theme(legend.position = "top",
legend.text = element_text(family = "Helvetica", size = 14),
axis.text = element_text(family = "Helvetica", size = 14),
axis.title = element_text(family = "Helvetica", size = 14),
plot.title = element_text(family = "Helvetica", size = 14))
artwork %>%
filter(!is.na(width) | !is.na(height)) %>%
mutate(dim = width*height) %>%
ggplot(aes(x = year, y = log10(dim))) +
geom_point(colour = "#FAAB18") +
geom_smooth(method = "glm", colour = "#555555") +
# Labels
labs(fill = "", y = "Dimensions",
x = "Year", title = "Art Dimensions") +
# theme
theme(legend.position = "top",
legend.text = element_text(family = "Helvetica", size = 14),
axis.text = element_text(family = "Helvetica", size = 14),
axis.title = element_text(family = "Helvetica", size = 14),
plot.title = element_text(family = "Helvetica", size = 14,
face = "bold", color = "#222222"))
artwork %>%
filter(!is.na(width) | !is.na(height)) %>%
mutate(dim = width*height) %>%
ggplot(aes(x = year, y = log10(dim))) +
geom_point(colour = "#FAAB18") +
geom_smooth(method = "glm", colour = "#555555") +
# Labels
labs(fill = "", y = "Dimensions",
x = "Year", title = "Art Dimensions") +
# theme
theme(legend.position = "top",
legend.text = element_text(family = "Helvetica", size = 14),
axis.text = element_text(family = "Helvetica", size = 14),
axis.title = element_text(family = "Helvetica", size = 14),
plot.title = element_text(family = "Helvetica", size = 18,
face = "bold", color = "#222222"))
artwork %>%
filter(!is.na(width) | !is.na(height)) %>%
mutate(dim = width*height) %>%
ggplot(aes(x = year, y = log10(dim))) +
geom_point(colour = "#FAAB18") +
geom_smooth(method = "glm", colour = "#555555") +
# Labels
labs(fill = "", y = "Dimensions",
x = "Year", title = "Tale's Acquired Arts Dimension") +
# theme
theme(legend.position = "top",
legend.text = element_text(family = "Helvetica", size = 14),
axis.text = element_text(family = "Helvetica", size = 14),
axis.title = element_text(family = "Helvetica", size = 14),
plot.title = element_text(family = "Helvetica", size = 18,
face = "bold", color = "#222222"))
artwork %>%
filter(!is.na(width) | !is.na(height)) %>%
mutate(dim = width*height) %>%
ggplot(aes(x = year, y = log10(dim))) +
geom_point(colour = "#FAAB18") +
geom_smooth(method = "glm", colour = "#555555") +
# Labels
labs(fill = "", y = "Dimensions",
x = "Year", title = "Tale's Acquired Arts Dimension", subtitle = "Dimensions (height * width) logorithm has been taken") +
# theme
theme(legend.position = "top",
legend.text = element_text(family = "Helvetica", size = 14),
axis.text = element_text(family = "Helvetica", size = 14),
axis.title = element_text(family = "Helvetica", size = 14),
plot.title = element_text(family = "Helvetica", size = 18,
face = "bold", color = "#222222"),
plot.title = element_text(family = "Helvetica", size = 16,
face = "bold", color = "#222222"))
artwork %>%
filter(!is.na(width) | !is.na(height)) %>%
mutate(dim = width*height) %>%
ggplot(aes(x = year, y = log10(dim))) +
geom_point(colour = "#FAAB18") +
geom_smooth(method = "glm", colour = "#555555") +
# Labels
labs(fill = "", y = "Dimensions",
x = "Year", title = "Tale's Acquired Arts Dimension", subtitle = "Dimensions (height * width) logorithm has been taken") +
# theme
theme(legend.position = "top",
legend.text = element_text(family = "Helvetica", size = 14),
axis.text = element_text(family = "Helvetica", size = 14),
axis.title = element_text(family = "Helvetica", size = 14),
plot.title = element_text(family = "Helvetica", size = 18,
face = "bold", color = "#222222"),
plot.subtitle = element_text(family = "Helvetica", size = 16,
face = "bold", color = "#222222"))
artwork %>%
filter(!is.na(width) | !is.na(height)) %>%
mutate(dim = width*height) %>%
ggplot(aes(x = year, y = log10(dim))) +
geom_point(colour = "#FAAB18") +
geom_smooth(method = "glm", colour = "#555555") +
# Labels
labs(fill = "", y = "Dimensions",
x = "Year", title = "Tale's Acquired Arts Dimension", subtitle = "Dimensions (height * width) logorithm has been taken") +
# theme
theme(legend.position = "top",
legend.text = element_text(family = "Helvetica", size = 14),
axis.text = element_text(family = "Helvetica", size = 14),
axis.title = element_text(family = "Helvetica", size = 14),
plot.title = element_text(family = "Helvetica", size = 18,
face = "bold", color = "#222222"),
plot.subtitle = element_text(family = "Helvetica", size = 16,
color = "#222222"))
artwork %>%
filter(!is.na(width) | !is.na(height)) %>%
mutate(dim = width*height) %>%
ggplot(aes(x = year, y = log10(dim))) +
geom_point(colour = "#FAAB18") +
geom_smooth(method = "glm", colour = "#555555") +
# Labels
labs(fill = "", y = "Dimensions",
x = "Year", title = "Tale's Acquired Arts Dimension",
subtitle = "Dimensions logorithm has been taken") +
# theme
theme(legend.position = "top",
legend.text = element_text(family = "Helvetica", size = 14),
axis.text = element_text(family = "Helvetica", size = 14),
axis.title = element_text(family = "Helvetica", size = 14),
plot.title = element_text(family = "Helvetica", size = 18,
face = "bold", color = "#222222"),
plot.subtitle = element_text(family = "Helvetica", size = 16,
color = "#222222"))
artwork %>%
filter(!is.na(width) | !is.na(height)) %>%
mutate(dim = width*height) %>%
ggplot(aes(x = year, y = (dim))) +
geom_point(colour = "#FAAB18") +
geom_smooth(method = "glm", colour = "#555555") +
# Labels
labs(fill = "", y = "Dimensions",
x = "Year", title = "Tale's Acquired Arts Dimension",
subtitle = "Dimensions logorithm has been taken") +
# theme
theme(legend.position = "top",
legend.text = element_text(family = "Helvetica", size = 14),
axis.text = element_text(family = "Helvetica", size = 14),
axis.title = element_text(family = "Helvetica", size = 14),
plot.title = element_text(family = "Helvetica", size = 18,
face = "bold", color = "#222222"),
plot.subtitle = element_text(family = "Helvetica", size = 16,
color = "#222222"))
artwork %>%
filter(!is.na(width) | !is.na(height)) %>%
mutate(dim = width*height) %>%
ggplot(aes(x = year, y = log2(dim))) +
geom_point(colour = "#FAAB18") +
geom_smooth(method = "glm", colour = "#555555") +
# Labels
labs(fill = "", y = "Dimensions",
x = "Year", title = "Tale's Acquired Arts Dimension",
subtitle = "Dimensions logorithm has been taken") +
# theme
theme(legend.position = "top",
legend.text = element_text(family = "Helvetica", size = 14),
axis.text = element_text(family = "Helvetica", size = 14),
axis.title = element_text(family = "Helvetica", size = 14),
plot.title = element_text(family = "Helvetica", size = 18,
face = "bold", color = "#222222"),
plot.subtitle = element_text(family = "Helvetica", size = 16,
color = "#222222"))
artwork %>%
filter(!is.na(width) | !is.na(height)) %>%
mutate(dim = width/height) %>%
ggplot(aes(x = year, y = log2(dim))) +
geom_point(colour = "#FAAB18") +
geom_smooth(method = "glm", colour = "#555555") +
# Labels
labs(fill = "", y = "Dimensions",
x = "Year", title = "Tale's Acquired Arts Dimension",
subtitle = "Dimensions logorithm has been taken") +
# theme
theme(legend.position = "top",
legend.text = element_text(family = "Helvetica", size = 14),
axis.text = element_text(family = "Helvetica", size = 14),
axis.title = element_text(family = "Helvetica", size = 14),
plot.title = element_text(family = "Helvetica", size = 18,
face = "bold", color = "#222222"),
plot.subtitle = element_text(family = "Helvetica", size = 16,
color = "#222222"))
artwork %>%
filter(!is.na(width) | !is.na(height)) %>%
mutate(dim = width/height) %>%
ggplot(aes(x = year, y = (dim))) +
geom_point(colour = "#FAAB18") +
geom_smooth(method = "glm", colour = "#555555") +
# Labels
labs(fill = "", y = "Dimensions",
x = "Year", title = "Tale's Acquired Arts Dimension",
subtitle = "Dimensions logorithm has been taken") +
# theme
theme(legend.position = "top",
legend.text = element_text(family = "Helvetica", size = 14),
axis.text = element_text(family = "Helvetica", size = 14),
axis.title = element_text(family = "Helvetica", size = 14),
plot.title = element_text(family = "Helvetica", size = 18,
face = "bold", color = "#222222"),
plot.subtitle = element_text(family = "Helvetica", size = 16,
color = "#222222"))
artwork %>%
filter(!is.na(width) | !is.na(height)) %>%
mutate(dim = width*height) %>%
ggplot(aes(x = year, y = log2(dim))) +
geom_point(colour = "#FAAB18") +
geom_smooth(method = "glm", colour = "#555555") +
# Labels
labs(fill = "", y = "Dimensions",
x = "Year", title = "Tale's Acquired Arts Dimension",
subtitle = "Dimensions logorithm has been taken") +
# theme
theme(legend.position = "top",
legend.text = element_text(family = "Helvetica", size = 14),
axis.text = element_text(family = "Helvetica", size = 14),
axis.title = element_text(family = "Helvetica", size = 14),
plot.title = element_text(family = "Helvetica", size = 18,
face = "bold", color = "#222222"),
plot.subtitle = element_text(family = "Helvetica", size = 16,
color = "#222222"))
artwork %>%
filter(!is.na(width) | !is.na(height)) %>%
mutate(dim = width*height) %>%
ggplot(aes(x = year, y = log2(dim))) +
geom_point(colour = "#FAAB18") +
geom_smooth(method = "loss", colour = "#555555") +
# Labels
labs(fill = "", y = "Dimensions",
x = "Year", title = "Tale's Acquired Arts Dimension",
subtitle = "Dimensions logorithm of 2 has been taken") +
# theme
theme(legend.position = "top",
legend.text = element_text(family = "Helvetica", size = 14),
axis.text = element_text(family = "Helvetica", size = 14),
axis.title = element_text(family = "Helvetica", size = 14),
plot.title = element_text(family = "Helvetica", size = 18,
face = "bold", color = "#222222"),
plot.subtitle = element_text(family = "Helvetica", size = 16,
color = "#222222"))
artwork %>%
filter(!is.na(width) | !is.na(height)) %>%
mutate(dim = width*height) %>%
ggplot(aes(x = year, y = log2(dim))) +
geom_point(colour = "#FAAB18") +
geom_smooth(method = "loess", colour = "#555555") +
# Labels
labs(fill = "", y = "Dimensions",
x = "Year", title = "Tale's Acquired Arts Dimension",
subtitle = "Dimensions logorithm of 2 has been taken") +
# theme
theme(legend.position = "top",
legend.text = element_text(family = "Helvetica", size = 14),
axis.text = element_text(family = "Helvetica", size = 14),
axis.title = element_text(family = "Helvetica", size = 14),
plot.title = element_text(family = "Helvetica", size = 18,
face = "bold", color = "#222222"),
plot.subtitle = element_text(family = "Helvetica", size = 16,
color = "#222222"))
artwork %>%
filter(!is.na(width) | !is.na(height)) %>%
mutate(dim = width*height) %>%
ggplot(aes(x = year, y = log2(dim))) +
geom_point(colour = "#FAAB18") +
geom_smooth(method = "rlm", colour = "#555555") +
# Labels
labs(fill = "", y = "Dimensions",
x = "Year", title = "Tale's Acquired Arts Dimension",
subtitle = "Dimensions logorithm of 2 has been taken") +
# theme
theme(legend.position = "top",
legend.text = element_text(family = "Helvetica", size = 14),
axis.text = element_text(family = "Helvetica", size = 14),
axis.title = element_text(family = "Helvetica", size = 14),
plot.title = element_text(family = "Helvetica", size = 18,
face = "bold", color = "#222222"),
plot.subtitle = element_text(family = "Helvetica", size = 16,
color = "#222222"))
artwork %>%
filter(!is.na(width) | !is.na(height)) %>%
mutate(dim = width*height) %>%
ggplot(aes(x = year, y = log2(dim))) +
geom_point(colour = "#FAAB18") +
geom_smooth(method = "lm", colour = "#555555") +
# Labels
labs(fill = "", y = "Dimensions",
x = "Year", title = "Tale's Acquired Arts Dimension",
subtitle = "Dimensions logorithm of 2 has been taken") +
# theme
theme(legend.position = "top",
legend.text = element_text(family = "Helvetica", size = 14),
axis.text = element_text(family = "Helvetica", size = 14),
axis.title = element_text(family = "Helvetica", size = 14),
plot.title = element_text(family = "Helvetica", size = 18,
face = "bold", color = "#222222"),
plot.subtitle = element_text(family = "Helvetica", size = 16,
color = "#222222"))
artwork %>%
filter(!is.na(width) | !is.na(height)) %>%
mutate(dim = width*height) %>%
ggplot(aes(x = year, y = log2(dim))) +
geom_point(colour = "#FAAB18") +
geom_smooth(method = "gam", colour = "#555555") +
# Labels
labs(fill = "", y = "Dimensions",
x = "Year", title = "Tale's Acquired Arts Dimension",
subtitle = "Dimensions logorithm of 2 has been taken") +
# theme
theme(legend.position = "top",
legend.text = element_text(family = "Helvetica", size = 14),
axis.text = element_text(family = "Helvetica", size = 14),
axis.title = element_text(family = "Helvetica", size = 14),
plot.title = element_text(family = "Helvetica", size = 18,
face = "bold", color = "#222222"),
plot.subtitle = element_text(family = "Helvetica", size = 16,
color = "#222222"))
artwork %>%
filter(!is.na(width) | !is.na(height)) %>%
mutate(dim = width*height) %>%
ggplot(aes(x = year, y = log2(dim))) +
geom_point(colour = "#FAAB18") +
geom_smooth(method = "auto", colour = "#555555") +
# Labels
labs(fill = "", y = "Dimensions",
x = "Year", title = "Tale's Acquired Arts Dimension",
subtitle = "Dimensions logorithm of 2 has been taken") +
# theme
theme(legend.position = "top",
legend.text = element_text(family = "Helvetica", size = 14),
axis.text = element_text(family = "Helvetica", size = 14),
axis.title = element_text(family = "Helvetica", size = 14),
plot.title = element_text(family = "Helvetica", size = 18,
face = "bold", color = "#222222"),
plot.subtitle = element_text(family = "Helvetica", size = 16,
color = "#222222"))
artwork %>%
filter(!is.na(width) | !is.na(height)) %>%
mutate(dim = width*height) %>%
ggplot(aes(x = year, y = log2(dim))) +
geom_point(colour = "#FAAB18") +
geom_smooth(method = "auto", colour = "#555555") +
# Labels
labs(fill = "", y = "Dimensions",
x = "Year", title = "Tale's Acquired Arts Dimension",
subtitle = "Dimensions logorithm") +
# theme
theme(legend.position = "top",
legend.text = element_text(family = "Helvetica", size = 14),
axis.text = element_text(family = "Helvetica", size = 14),
axis.title = element_text(family = "Helvetica", size = 14),
plot.title = element_text(family = "Helvetica", size = 18,
face = "bold", color = "#222222"),
plot.subtitle = element_text(family = "Helvetica", size = 16,
color = "#222222"))
century <- artwork %>% cut(year, breaks = c(1500, 1600, 1700, 1800, 1900, 2000),
labels = c("16th century","17th century","18th century",
"19th century", "20th century"))
century <- artwork %>%
cut(year, breaks = c(1500, 1600, 1700, 1800, 1900, 2000),
labels = c("16th century","17th century","18th century",
"19th century", "20th century"))
century <- cut(artwork$year, breaks = c(1500, 1600, 1700, 1800, 1900, 2000),
labels = c("16th century","17th century","18th century",
"19th century", "20th century"))
century <- cut(artwork$year, breaks = c(1500, 1600, 1700, 1800, 1900, 2000),
labels = c("16th century","17th century","18th century",
"19th century", "20th century"))
sample <- sample.split(century, SplitRatio=0.7)
train <- century[sample,]
test  <- century[!sample,]
artwork %>%
filter(!is.na(width) | !is.na(height)) %>%
mutate(dim = width*height) %>%
ggplot(aes(x = year, y = log2(dim))) +
geom_point(colour = "#FAAB18") +
geom_smooth(method = "auto", colour = "#555555") +
# Labels
labs(fill = "", y = "Dimensions",
x = "Year", title = "Tale's Acquired Arts Dimension",
subtitle = "Dimensions is in log2") +
# theme
theme(legend.position = "top",
legend.text = element_text(family = "Helvetica", size = 14),
axis.text = element_text(family = "Helvetica", size = 14),
axis.title = element_text(family = "Helvetica", size = 14),
plot.title = element_text(family = "Helvetica", size = 18,
face = "bold", color = "#222222"),
plot.subtitle = element_text(family = "Helvetica", size = 16,
color = "#222222"))
install.packages("textrecipes")
# read the data
artwork <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-01-12/artwork.csv')
artists <- readr::read_csv("https://github.com/tategallery/collection/raw/master/artist_data.csv")
artwork <- artwork %>%
# remove unwanted column
select(-c("accession_number", "artistRole", "artistId", "dateText", "creditLine", "units", "inscription", "thumbnailCopyright", "thumbnailUrl", "url"))
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE, cache = TRUE)
library(tidyverse) # metadata of packages
theme_set(theme_light())
artwork <- artwork %>%
# remove unwanted column
select(-c("accession_number", "artistRole", "artistId", "dateText", "creditLine", "units", "inscription", "thumbnailCopyright", "thumbnailUrl", "url"))
artwork %>%
filter(!is.na(year) | !is.na(acquisitionYear)) %>%
# make a plot
ggplot() +
# histogram
geom_histogram(aes(year, fill = "#1380A1"),
bins = 50, alpha = 0.7) +
geom_histogram(aes(acquisitionYear, fill = "#FAAB18"),
bins = 50, alpha = 0.7) +
geom_hline(aes(yintercept = 0), size = 0.5, colour="#333333") +
scale_fill_manual(values = c("#1380A1", "#FAAB18"),
labels = c("Year of creation", "Year acquired")) +
# Labels
labs(fill = "", y = "Count", x = "Year") +
# theme
theme(legend.position = "top",
legend.text = element_text(family = "Helvetica", size = 14),
axis.text = element_text(family = "Helvetica", size = 14),
axis.title = element_text(family = "Helvetica", size = 14))
artwork %>%
filter(!is.na(width) | !is.na(height)) %>%
mutate(dim = width*height) %>%
ggplot(aes(x = year, y = log2(dim))) +
geom_point(colour = "#FAAB18") +
geom_smooth(method = "auto", colour = "#555555") +
# Labels
labs(fill = "", y = "Dimensions",
x = "Year", title = "Tale's Acquired Arts Dimension",
subtitle = "Dimensions is in log2") +
# theme
theme(legend.position = "top",
legend.text = element_text(family = "Helvetica", size = 14),
axis.text = element_text(family = "Helvetica", size = 14),
axis.title = element_text(family = "Helvetica", size = 14),
plot.title = element_text(family = "Helvetica", size = 18,
face = "bold", color = "#222222"),
plot.subtitle = element_text(family = "Helvetica", size = 16,
color = "#222222"))
century <- cut(artwork$year, breaks = c(1500, 1600, 1700, 1800, 1900, 2000),
labels = c("16th century","17th century","18th century",
"19th century", "20th century"))
# Set the random number stream using `set.seed()` so that the results can be
# reproduced later.
set.seed(123)
# Save the split information for an 80/20 split of the data
century_split <- initial_split(century, prob = 0.80)
century_split
# <Analysis/Assess/Total>
century_train <- training(century_split)
century_test  <-  testing(century_split)
dim(century_train)
century <- cut(artwork$year, breaks = c(1500, 1600, 1700, 1800, 1900, 2000),
labels = c("16th century","17th century","18th century",
"19th century", "20th century"))
# Set the random number stream using `set.seed()` so that the results can be
# reproduced later.
set.seed(123)
# Save the split information for an 80/20 split of the data
century_split <- initial_split(century, prob = 0.80)
library(tidymodels)
# Save the split information for an 80/20 split of the data
century_split <- initial_split(century, prob = 0.80)
century_split
# Save the split information for an 80/20 split of the data
century_split <- initial_split(century, prob = 0.80)
century <- cut(artwork$year, breaks = c(1500, 1600, 1700, 1800, 1900, 2000),
labels = c("16th century","17th century","18th century",
"19th century", "20th century"))
# Save the split information for an 80/20 split of the data
century_split <- initial_split(century, prob = 0.80)
