data_scientists %>%
select(Q14) %>% # prepare data
filter(Q14 != 'NA') %>%
mutate(Q14 = strsplit(Q14, ",")) %>%
unnest(Q14) %>%
add_count(Q14, name = "count") %>%
mutate(Q14 = fct_reorder(Q14, count)) %>%
unique() %>%
ggplot(aes(as.factor(Q14), count, colour = "#FAAB18")) + # make plot
geom_line(group = 1, size = 1) +
geom_point(colour = "#333333") +
geom_hline(yintercept = 0, size = 1, colour = "#333333") +
geom_text(aes(label = count), vjust = -0.5, colour = "black",
family = "Helvetica", size = 6) +
scale_colour_manual(values = "#FAAB18") +
coord_flip() +
labs(x = "",
y = "",
title = "Visualization Libraries") +
theme(legend.position = "none",
axis.text = element_text(size= 14, family = "Helvetica", colour = "#333333"),
text = element_text(size= 14, family = "Helvetica", colour = "#333333"))
ml_library <- as_tibble(gsub("\\s*\\([^\\)]+\\)","",
as.character(data_scientists$Q17)
))
# prepare data
ml_library <- ml_library %>%
mutate(value = strsplit(value, ",")) %>%
unnest(value) %>%
add_count(value, name = "count") %>%
unique() %>%
mutate(total = sum(count), percent = round((count / total)*100, 0))
# make plot
ml_library %>%
filter(value != "NA" & percent > 3) %>%
mutate(value = fct_reorder(value, percent)) %>%
ggplot(aes("", percent, fill = value)) +
geom_col() +
geom_text(aes(label = paste0(percent, "%")), vjust = 0.5,
colour = "white", position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y", start = 0) +
geom_hline(yintercept = 0, size = 1, colour = "#333333") +
labs(title = "ML Methods") +
bbplot::bbc_style()
cv_algo <- as_tibble(gsub("\\s*\\([^\\)]+\\)","",
as.character(data_scientists$Q18)
))
# prepare data
cv_algo <- cv_algo %>%
mutate(value = strsplit(value, ",")) %>%
unnest(value) %>%
add_count(value, name = "count") %>%
unique() %>%
mutate(total = sum(count), percent = round((count / total)*100, 2))
# make a table
cv_algo %>%
arrange(desc(count)) %>%
formattable()
require(pack)
nlp <- as_tibble(gsub("\\s*\\([^\\)]+\\)","",
as.character(data_scientists$Q19)
))
# prepare data
nlp <- nlp %>%
mutate(value = strsplit(value, ",")) %>%
unnest(value) %>%
add_count(value, name = "count") %>%
unique() %>%
mutate(total = sum(count), percent = round((count / total)*100, 2))
# make plot
bubbles::bubbles(nlp$percent, nlp$value, color = rainbow(6, alpha=NULL)[6], width=1000, height=900)
# prepare data
database <- data_scientists %>%
select(Q29A) %>%
filter(Q29A != "") %>%
mutate(Q29A = strsplit(Q29A, ",")) %>%
unnest(Q29A) %>%
add_count(Q29A, name = "count") %>%
unique() %>%
arrange(desc(count)) %>%
mutate(total = sum(count), percent = round(count/total*100,0)) %>%
mutate(Q29A = fct_reorder(Q29A, percent)) %>%
filter(percent > 2)
ggplot(database, aes(Q29A, percent)) +
geom_col(fill = ifelse(database$Q29A == "None","#1380A1", "#FAAB18")) +
geom_text(aes(y = 1,label = paste0(percent, "%")),
hjust = 0, vjust = 0.5,
colour = ifelse(database$Q29A == "None", "white", "black")) +
coord_flip() +
labs(title = "Database") +
geom_hline(yintercept = 0, size = 1, colour = "#333333") +
bbplot::bbc_style()
data_scientists %>%
select(Q31A) %>%
filter(Q31A != "") %>%
mutate(Q31A = strsplit(Q31A, ",")) %>%
unnest(Q31A) %>%
add_count(Q31A, name = "count") %>%
unique() %>%
arrange(desc(count)) %>%
mutate(total = sum(count), percent = round(count/total*100,0)) %>%
mutate(Q31A = fct_reorder(Q31A, percent)) %>%
filter(percent > 2) %>%
ggplot(aes(Q31A, percent)) +
geom_col(fill = "#990000") +
geom_text(aes(y = 2,label = paste0(percent, "%")), hjust = 0, vjust = 0.5, colour = "white") +
geom_hline(yintercept = 0, size = 1, colour = "#333333") +
bbplot::bbc_style() +
theme(axis.text.x = element_text(angle = 10, size = 12))
# prepare data
deploy <- data_scientists %>%
select(Q36) %>%
filter(Q36 != "") %>%
mutate(Q36 = strsplit(Q36, ",")) %>%
unnest(Q36) %>%
add_count(Q36, name = "count") %>%
unique() %>%
arrange(desc(count)) %>%
mutate(Q36 = ifelse(Q36 == "I do not share my work publicly",
"No sharing", Q36)) %>%
mutate_if(is.character, factor) %>%
mutate(total = sum(count), percent = round(count/total * 100, 0)) %>%
mutate(Q36 = fct_reorder(Q36, percent))
# make a plot
ggplot(deploy, aes(Q36, percent)) +
geom_col(fill = ifelse(deploy$Q36 == "No sharing",
"#1380A1","#588300")) +
geom_text(aes(label = paste0(percent, "%")),
hjust = 0.3, vjust = -0.1, family = "Helvetica", size = 5) +
geom_hline(yintercept = 0, size = 1, colour = "#333333") +
bbplot::bbc_style() +
theme(axis.text.x = element_text(angle = 18, size = 12))
cv_algo <- as_tibble(gsub("\\s*\\([^\\)]+\\)","",
as.character(data_scientists$Q18)
))
# prepare data
cv_algo <- cv_algo %>%
mutate(value = strsplit(value, ",")) %>%
unnest(value) %>%
add_count(value, name = "count") %>%
unique() %>%
mutate(total = sum(count), percent = round((count / total)*100, 2))
# make a table
cv_algo %>%
arrange(desc(count)) %>%
formattable()
ml_library <- as_tibble(gsub("\\s*\\([^\\)]+\\)","",
as.character(data_scientists$Q17)
))
# prepare data
ml_library <- ml_library %>%
mutate(value = strsplit(value, ",")) %>%
unnest(value) %>%
add_count(value, name = "count") %>%
unique() %>%
mutate(total = sum(count), percent = round((count / total)*100, 0))
# make plot
ml_library %>%
filter(value != "NA" & percent > 3) %>%
mutate(value = fct_reorder(value, percent)) %>%
ggplot(aes("", percent, fill = value)) +
geom_col() +
geom_text(aes(label = paste0(percent, "%")), vjust = 0.5,
colour = "white", position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y", start = 0) +
geom_hline(yintercept = 0, size = 1, colour = "#333333") +
labs(title = "ML Methods") +
bbplot::bbc_style()
# make plot
ml_library %>%
filter(value != "NA" & percent > 3) %>%
mutate(value = fct_reorder(value, percent)) %>%
ggplot(aes("", percent, fill = value)) +
geom_col() +
geom_text(aes(label = paste0(percent, "%")), vjust = 0.5,
colour = "white", position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y", start = 0) +
geom_hline(yintercept = 0, size = 1, colour = "#333333") +
labs(title = "ML Methods") +
theme(legend.position = "left") +
bbplot::bbc_style()
# make plot
ml_library %>%
filter(value != "NA" & percent > 3) %>%
mutate(value = fct_reorder(value, percent)) %>%
ggplot(aes("", percent, fill = value)) +
geom_col() +
geom_text(aes(label = paste0(percent, "%")), vjust = 0.5,
colour = "white", position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y", start = 0) +
geom_hline(yintercept = 0, size = 1, colour = "#333333") +
labs(title = "ML Methods") +
theme(legend.position = "left")
ml_library <- as_tibble(gsub("\\s*\\([^\\)]+\\)","",
as.character(data_scientists$Q17)
))
# prepare data
ml_library <- ml_library %>%
mutate(value = strsplit(value, ",")) %>%
unnest(value) %>%
add_count(value, name = "count") %>%
unique() %>%
mutate(total = sum(count), percent = round((count / total)*100, 0))
# make plot
ml_library %>%
filter(value != "NA" & percent > 3) %>%
mutate(value = fct_reorder(value, percent)) %>%
ggplot(aes("", percent, fill = value)) +
geom_col() +
geom_text(aes(label = paste0(percent, "%")), vjust = 0.5,
colour = "white", position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y", start = 0) +
geom_hline(yintercept = 0, size = 1, colour = "#333333") +
labs(title = "ML Methods",
x = "",
y = "") +
theme(legend.position = "left")
ml_library <- as_tibble(gsub("\\s*\\([^\\)]+\\)","",
as.character(data_scientists$Q17)
))
# prepare data
ml_library <- ml_library %>%
mutate(value = strsplit(value, ",")) %>%
unnest(value) %>%
add_count(value, name = "count") %>%
unique() %>%
mutate(total = sum(count), percent = round((count / total)*100, 0))
# make plot
ml_library %>%
filter(value != "NA" & percent > 3) %>%
mutate(value = fct_reorder(value, percent)) %>%
ggplot(aes("", percent, fill = value)) +
geom_col() +
geom_text(aes(label = paste0(percent, "%")), vjust = 0.5,
colour = "white", position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y", start = 0) +
geom_hline(yintercept = 0, size = 1, colour = "#333333") +
labs(title = "ML Methods",
x = "",
y = "",
legend = "") +
theme(legend.position = "left")
ml_library <- as_tibble(gsub("\\s*\\([^\\)]+\\)","",
as.character(data_scientists$Q17)
))
# prepare data
ml_library <- ml_library %>%
mutate(value = strsplit(value, ",")) %>%
unnest(value) %>%
add_count(value, name = "count") %>%
unique() %>%
mutate(total = sum(count), percent = round((count / total)*100, 0))
# make plot
ml_library %>%
filter(value != "NA" & percent > 3) %>%
mutate(value = fct_reorder(value, percent)) %>%
ggplot(aes("", percent, fill = value)) +
geom_col() +
geom_text(aes(label = paste0(percent, "%")), vjust = 0.5,
colour = "white", position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y", start = 0) +
geom_hline(yintercept = 0, size = 1, colour = "#333333") +
labs(title = "ML Methods",
x = "",
y = "",
fill = "") +
theme(legend.position = "left", family = "Helvetica")
# make plot
ml_library %>%
filter(value != "NA" & percent > 3) %>%
mutate(value = fct_reorder(value, percent)) %>%
ggplot(aes("", percent, fill = value)) +
geom_col() +
geom_text(aes(label = paste0(percent, "%")), vjust = 0.5,
colour = "white", position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y", start = 0) +
geom_hline(yintercept = 0, size = 1, colour = "#333333") +
labs(title = "ML Methods",
x = "",
y = "",
fill = "") +
theme(legend.position = "left", element_text(family = "Helvetica"))
require(pack)
nlp <- as_tibble(gsub("\\s*\\([^\\)]+\\)","",
as.character(data_scientists$Q19)
))
# prepare data
nlp <- nlp %>%
mutate(value = strsplit(value, ",")) %>%
unnest(value) %>%
add_count(value, name = "count") %>%
unique() %>%
mutate(total = sum(count), percent = round((count / total)*100, 2))
# make plot
bubbles::bubbles(nlp$percent, nlp$value, color = rainbow(6, alpha=NULL)[6], width=1000, height=900)
cv_algo <- as_tibble(gsub("\\s*\\([^\\)]+\\)","",
as.character(data_scientists$Q18)
))
# prepare data
cv_algo <- cv_algo %>%
mutate(value = strsplit(value, ",")) %>%
unnest(value) %>%
add_count(value, name = "count") %>%
unique() %>%
mutate(total = sum(count), percent = round((count / total)*100, 2))
# make a table
cv_algo %>%
arrange(desc(count)) %>%
formattable()
ml_library <- as_tibble(gsub("\\s*\\([^\\)]+\\)","",
as.character(data_scientists$Q17)
))
# prepare data
ml_library <- ml_library %>%
mutate(value = strsplit(value, ",")) %>%
unnest(value) %>%
add_count(value, name = "count") %>%
unique() %>%
mutate(total = sum(count), percent = round((count / total)*100, 0))
# make plot
ml_library %>%
filter(value != "NA" & percent > 3) %>%
mutate(value = fct_reorder(value, percent)) %>%
ggplot(aes("", percent, fill = value)) +
geom_col() +
geom_text(aes(label = paste0(percent, "%")), vjust = 0.5,
colour = "white", position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y", start = 0) +
geom_hline(yintercept = 0, size = 1, colour = "#333333") +
labs(title = "ML Methods",
x = "",
y = "",
fill = "") +
theme(legend.position = "left",family = "Helvetica")
ml_library <- as_tibble(gsub("\\s*\\([^\\)]+\\)","",
as.character(data_scientists$Q17)
))
# prepare data
ml_library <- ml_library %>%
mutate(value = strsplit(value, ",")) %>%
unnest(value) %>%
add_count(value, name = "count") %>%
unique() %>%
mutate(total = sum(count), percent = round((count / total)*100, 0))
# make plot
ml_library %>%
filter(value != "NA" & percent > 3) %>%
mutate(value = fct_reorder(value, percent)) %>%
ggplot(aes("", percent, fill = value)) +
geom_col() +
geom_text(aes(label = paste0(percent, "%")), vjust = 0.5,
colour = "white", position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y", start = 0) +
geom_hline(yintercept = 0, size = 1, colour = "#333333") +
labs(title = "ML Methods",
x = "",
y = "",
fill = "") +
theme(legend.position = "left")
ml_library <- as_tibble(gsub("\\s*\\([^\\)]+\\)","",
as.character(data_scientists$Q17)
))
# prepare data
ml_library <- ml_library %>%
mutate(value = strsplit(value, ",")) %>%
unnest(value) %>%
add_count(value, name = "count") %>%
unique() %>%
mutate(total = sum(count), percent = round((count / total)*100, 0))
# make plot
ml_library %>%
filter(value != "NA" & percent > 3) %>%
mutate(value = fct_reorder(value, percent)) %>%
ggplot(aes("", percent, fill = value)) +
geom_col() +
geom_text(aes(label = paste0(percent, "%")), vjust = 0.5,
colour = "white", position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y", start = 0) +
geom_hline(yintercept = 0, size = 1, colour = "#333333") +
labs(title = "ML Methods",
x = "",
y = "",
fill = "") +
theme(legend.position = "left",
axis.text = element_text(size= 14, family = "Helvetica", colour = "#333333"),
text = element_text(size= 14, family = "Helvetica", colour = "#333333"))
count(data_scientists)
data_scientists %>%
select(Q26A) %>%
filter(Q26A != "") %>%
summarise(count = n(), total = 2676, percent = count/total*100)
data_scientists %>%
select(Q26A) %>%
filter(Q26A != "") %>%
mutate(Q26A = strsplit(Q26A, ",")) %>%
unnest(Q26A) %>%
add_count(Q26A, name = "count") %>%
unique() %>%
arrange(desc(count)) %>%
mutate(total = sum(count), percent = round(count/total*100,0)) %>%
filter(percent > 2) %>%
ggplot(aes("", percent, fill = Q26A)) +
geom_bar(stat = "identity") +
geom_text(aes(label = paste0(percent, "%")),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y") +
labs(fill = "Cloud Platform")
data_scientists %>%
select(Q26A) %>%
filter(Q26A != "") %>%
mutate(Q26A = strsplit(Q26A, ",")) %>%
unnest(Q26A) %>%
add_count(Q26A, name = "count") %>%
unique() %>%
arrange(desc(count)) %>%
mutate(total = sum(count), percent = round(count/total*100,0)) %>%
filter(percent > 2) %>%
ggplot(aes("", percent, fill = Q26A)) +
geom_bar(stat = "identity") +
geom_text(aes(label = paste0(percent, "%")),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y") +
labs(fill = "Cloud Platform") +
theme(axis.text = element_text(size= 14, family = "Helvetica", colour = "#333333"),
text = element_text(size= 14, family = "Helvetica", colour = "#333333"))
cv_algo <- as_tibble(gsub("\\s*\\([^\\)]+\\)","",
as.character(data_scientists$Q18)
))
# prepare data
cv_algo <- cv_algo %>%
mutate(value = strsplit(value, ",")) %>%
unnest(value) %>%
add_count(value, name = "count") %>%
unique() %>%
mutate(total = sum(count), percent = round((count / total)*100, 2))
# make a table
cv_algo %>%
arrange(desc(count)) %>%
formattable()
count(data_scientists)
data_scientists %>%
select(Q26A) %>%
filter(Q26A != "") %>%
summarise(count = n(), total = 2676, percent = count/total*100)
data_scientists %>%
select(Q26A) %>%
filter(Q26A != "") %>%
mutate(Q26A = strsplit(Q26A, ",")) %>%
unnest(Q26A) %>%
add_count(Q26A, name = "count") %>%
unique() %>%
arrange(desc(count)) %>%
mutate(total = sum(count), percent = round(count/total*100,0)) %>%
filter(percent > 2) %>%
ggplot(aes("", percent, fill = Q26A)) +
geom_bar(stat = "identity") +
geom_text(aes(label = paste0(percent, "%")),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y") +
labs(fill = "Cloud Platform") +
theme(axis.text = element_text(size= 14, family = "Helvetica", colour = "#333333"),
text = element_text(size= 14, family = "Helvetica", colour = "#333333"))
data_scientists %>%
select(Q1, Q2) %>% # prepare data
mutate(Q2 = ifelse(Q2 == "Prefer to self-describe" | Q2 == "Prefer not to say" | Q2 == "Nonbinary", "Other", Q2)) %>%
ggplot(aes(Q1, fill = Q2)) + # create plot
geom_bar(stat = "count", position = "dodge2") +
geom_text(stat="count", aes(label =..count..), vjust = -0.01) +
scale_fill_viridis_d(direction = -1) +
geom_hline(yintercept = 0, size = 1, colour = "#333333") +
labs(title = "Data Scientist Age Group",
subtitle = "# of Data Scientists took kaggle survey, 2020",
fill = "",
x = "Age") +
bbplot::bbc_style() +
theme(legend.position = "top",
legend.justification = "left") +
guides(fill = guide_legend(reverse = TRUE))
#!/usr/bin/Rscript --vanilla
# compiles all .Rmd files in _R directory into .md files in Pages directory,
# if the input file is older than the output file.
# run ./knitpages.R to update all knitr files that need to be updated.
KnitPost <- function(input, outfile, figsfolder, cachefolder, base.url="/") {
# this function is a modified version of an example here:
# http://jfisher-usgs.github.com/r/2012/07/03/knitr-jekyll/
require(knitr);
opts_knit$set(base.url = base.url)
fig.path <- paste0(figsfolder, sub(".Rmd$", "", basename(input)), "/")
cache.path <- file.path(cachefolder, sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(cache.path = cache.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, outfile, envir = parent.frame())
}
knit_folder <- function(infolder, outfolder, figsfolder, cachefolder) {
for (infile in list.files(infolder, pattern = "*.Rmd", full.names = TRUE)) {
pattern = "\\d\\d\\d\\d\\-\\d\\d\\-\\d\\d\\-"
print(infile)
# folder = ifelse(grepl(pattern, infile), outfolder, "pages")
outfile = paste0(outfolder, "/", sub(".Rmd$", ".md", basename(infile)))
print(outfile)
# knit only if the input file is the last one modified
if (!file.exists(outfile) |
file.info(infile)$mtime > file.info(outfile)$mtime) {
KnitPost(infile, outfile, figsfolder, cachefolder)
}
}
}
knit_folder("_R", "_posts", "figs/", "_caches/")
#knit_folder("_R/drafts", "_drafts", "figs/drafts/")
knit_folder("../_R", "../_posts", "../figs/", "../_caches/")
